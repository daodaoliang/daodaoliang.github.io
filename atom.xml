<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>刀刀亮的博客</title>
  
  <subtitle>一切源于内心</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://daodaoliang.com/"/>
  <updated>2018-05-08T02:30:52.257Z</updated>
  <id>http://daodaoliang.com/</id>
  
  <author>
    <name>daodaoliang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>梦想清单</title>
    <link href="http://daodaoliang.com/%E5%BF%83%E4%B8%96%E7%95%8C/2099/04/14/%E6%96%B0%E4%B8%96%E7%95%8C-2015-04-14-%E6%A2%A6%E6%83%B3%E6%B8%85%E5%8D%95/"/>
    <id>http://daodaoliang.com/心世界/2099/04/14/新世界-2015-04-14-梦想清单/</id>
    <published>2099-04-13T16:00:00.000Z</published>
    <updated>2018-05-08T02:30:52.257Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://source.unsplash.com/random/800x300"></p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="298" height="52" src="//music.163.com/outchain/player?type=2&id=5267808&auto=1&height=32"></iframe><a id="more"></a><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">target = <span class="string">'日日当精进 但求无愧'</span></span><br><span class="line">target = <span class="string">'just do it'</span></span><br></pre></td></tr></table></figure><ul><li><p>完成自己制定的读书计划，按照书单列表进行阅读；</p></li><li><p>长途骑行一次；</p></li><li><p>拥有六块腹肌和匀称的身材；</p></li><li><p>参加一次马拉松比赛；</p></li><li><p>每天坚持锻炼(在生活轨迹里面打卡吧，这里就不占地方了)；</p></li><li><p>去心仪的大学读书深造；</p></li><li><p>拥有自己的工作室；</p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://source.unsplash.com/random/800x300&quot;&gt;&lt;/p&gt;
&lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=&quot;298&quot; height=&quot;52&quot; src=&quot;//music.163.com/outchain/player?type=2&amp;id=5267808&amp;auto=1&amp;height=32&quot;&gt;&lt;/iframe&gt;
    
    </summary>
    
      <category term="心世界" scheme="http://daodaoliang.com/categories/%E5%BF%83%E4%B8%96%E7%95%8C/"/>
    
    
  </entry>
  
  <entry>
    <title>CentOS升级PHP</title>
    <link href="http://daodaoliang.com/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/2018/05/18/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA-2018-05-18-CentOS%E5%8D%87%E7%BA%A7PHP/"/>
    <id>http://daodaoliang.com/环境搭建/2018/05/18/环境搭建-2018-05-18-CentOS升级PHP/</id>
    <published>2018-05-17T16:00:00.000Z</published>
    <updated>2018-05-18T03:16:00.265Z</updated>
    
    <content type="html"><![CDATA[<hr><h4 id="检查当前安装的PHP包"><a href="#检查当前安装的PHP包" class="headerlink" title="检查当前安装的PHP包"></a>检查当前安装的PHP包</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum list installed | grep php</span><br></pre></td></tr></table></figure><p>如果有安装的PHP包，先删除上述列出的所有包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum remove php.x86_64 php-cli.x86_64 php-common.x86_64 php-gd.x86_64 php-ldap.x86_64 php-mbstring.x86_64 php-mcrypt.x86_64 php-mysql.x86_64 php-pdo.x86_64</span><br></pre></td></tr></table></figure><h4 id="更换rpm源"><a href="#更换rpm源" class="headerlink" title="更换rpm源"></a>更换rpm源</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Centos 5.X 执行：</span></span><br><span class="line">    rpm -Uvh http://mirror.webtatic.com/yum/el5/latest.rpm</span><br><span class="line"><span class="meta">#</span><span class="bash"> CentOs 6.x 执行：</span></span><br><span class="line">    rpm -Uvh http://mirror.webtatic.com/yum/el6/latest.rpm</span><br><span class="line"><span class="meta">#</span><span class="bash"> CentOs 7.X 执行：</span></span><br><span class="line">    rpm -Uvh https://mirror.webtatic.com/yum/el7/epel-release.rpm</span><br><span class="line">    rpm -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpm</span><br></pre></td></tr></table></figure><p>如果想删除上面安装的包，重新安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rpm -qa | grep webstatic</span><br><span class="line">rpm -e  上面搜索到的包即可</span><br></pre></td></tr></table></figure><h4 id="运行yum-install"><a href="#运行yum-install" class="headerlink" title="运行yum install"></a>运行yum install</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> php5.5 执行</span></span><br><span class="line">yum install php55w.x86_64 php55w-cli.x86_64 php55w-common.x86_64 php55w-gd.x86_64 php55w-ldap.x86_64 php55w-mbstring.x86_64 php55w-mcrypt.x86_64 php55w-mysql.x86_64 php55w-pdo.x86_64</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> php5.6 执行</span></span><br><span class="line">yum install php56w.x86_64 php56w-cli.x86_64 php56w-common.x86_64 php56w-gd.x86_64 php56w-ldap.x86_64 php56w-mbstring.x86_64 php56w-mcrypt.x86_64 php56w-mysql.x86_64 php56w-pdo.x86_64</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> php7.0 执行</span></span><br><span class="line">yum install php70w.x86_64 php70w-cli.x86_64 php70w-common.x86_64 php70w-gd.x86_64 php70w-ldap.x86_64 php70w-mbstring.x86_64 php70w-mcrypt.x86_64 php70w-mysql.x86_64 php70w-pdo.x86_64</span><br></pre></td></tr></table></figure><h4 id="安装PHP-FPM"><a href="#安装PHP-FPM" class="headerlink" title="安装PHP FPM"></a>安装PHP FPM</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> php 5.5 执行</span></span><br><span class="line">yum install php55w-fpm</span><br><span class="line"><span class="meta">#</span><span class="bash"> php 5.6 执行</span></span><br><span class="line">yum install php56w-fpm</span><br><span class="line"><span class="meta">#</span><span class="bash"> php 7.0 执行</span></span><br><span class="line">yum install php70w-fpm</span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置开机自启动</span></span><br><span class="line">systemctl enable php-fpm.service</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;h4 id=&quot;检查当前安装的PHP包&quot;&gt;&lt;a href=&quot;#检查当前安装的PHP包&quot; class=&quot;headerlink&quot; title=&quot;检查当前安装的PHP包&quot;&gt;&lt;/a&gt;检查当前安装的PHP包&lt;/h4&gt;&lt;figure class=&quot;highlight shell&quot;&gt;
      
    
    </summary>
    
      <category term="环境搭建" scheme="http://daodaoliang.com/categories/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
    
  </entry>
  
  <entry>
    <title>无线渗透工具</title>
    <link href="http://daodaoliang.com/%E5%AE%89%E5%85%A8%E6%94%BB%E9%98%B2/2018/05/03/%E5%AE%89%E5%85%A8%E6%94%BB%E9%98%B2-2018-5-3-%E6%97%A0%E7%BA%BF%E6%B8%97%E9%80%8F%E5%B7%A5%E5%85%B7/"/>
    <id>http://daodaoliang.com/安全攻防/2018/05/03/安全攻防-2018-5-3-无线渗透工具/</id>
    <published>2018-05-02T16:00:00.000Z</published>
    <updated>2018-05-03T07:42:28.289Z</updated>
    
    <content type="html"><![CDATA[<p>本文原出处在<a href="http://www.4hou.com/tools/5584.html" target="_blank" rel="noopener">这里</a>，我是为了查阅方便，特转载一份我这里;<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/res/img/blog/安全攻防/嘚瑟.gif" alt="嘚瑟" title="">                </div>                <div class="image-caption">嘚瑟</div>            </figure></p><a id="more"></a><h5 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h5><ul><li><a href="https://github.com/kylemcdonald/FreeWifi" target="_blank" rel="noopener">FreeWiFi</a> – 如何获得免费的WiFi。</li></ul><h5 id="监控"><a href="#监控" class="headerlink" title="监控"></a>监控</h5><ul><li><a href="https://github.com/v1s1t0r1sh3r3/airgeddon" target="_blank" rel="noopener">Airgeddon</a> – 这是一个多用途的bash脚本，用于Linux系统审核无线网络。</li><li><a href="http://trac.assembla.com/giskismet" target="_blank" rel="noopener">GISKismet</a> – 是一种无线侦察可视化工具，以灵活的方式表示使用Kismet收集的数据。</li><li><a href="http://www.nirsoft.net/utils/wifi_hotspot_starter.html" target="_blank" rel="noopener">HostedNetworkStarter</a> – 是Windows 7及更高版本的简单工具，可以使用Windows操作系统的Wifi托管网络功能轻松创建无线网络适配器的WiFi热点。</li><li><a href="http://www.metageek.com/products/inssider/" target="_blank" rel="noopener">inSSIDer</a> – WiFi故障排除和优化工具，将小型WiFi网络管理提升到一个全新的水平。</li><li><a href="https://www.kismetwireless.net/" target="_blank" rel="noopener">Kismet</a> – 是无线网络检测器，嗅探器和入侵检测系统。Kismet主要使用Wi-Fi（IEEE 802.11）网络，但可以通过插件扩展以处理其他网络类型。</li><li><a href="https://sourceforge.net/projects/linssid/" target="_blank" rel="noopener">LinSSID</a> – Linux的图形无线扫描。</li><li><a href="http://www.netstumbler.com/" target="_blank" rel="noopener">NetStumbler</a> – Windows的工具，便于使用802.11b，802.11a和802.11g WLAN标准检测无线局域网。</li><li><a href="http://wellenreiter.sourceforge.net/" target="_blank" rel="noopener">wellenreiter</a> – 是无线网络发现和审计工具。</li><li><a href="https://github.com/hkm/whoishere.py" target="_blank" rel="noopener">whoishere.py</a> – WIFI客户端检测 – 通过为执行无线探测请求的设备分配名称来识别人员。</li><li><a href="http://www.nirsoft.net/utils/wifi_channel_monitor.html" target="_blank" rel="noopener">WiFiChannelMonitor</a> – 是一款适用于Windows的实用程序，可在您选择的通道上捕获WiFi流量，在监视器模式下使用Microsoft网络监视器捕获驱动程序，并显示有关接入点和连接到它们的WiFi客户端的</li></ul><h5 id="扫描"><a href="#扫描" class="headerlink" title="扫描"></a>扫描</h5><ul><li><a href="http://www.nirsoft.net/utils/wifi_information_view.html" target="_blank" rel="noopener">WifiInfoView</a>  – 扫描您所在地区的无线网络，并显示有关它们的广泛信息。</li><li><a href="http://www.nirsoft.net/utils/wireless_network_watcher.html" target="_blank" rel="noopener">wireless_network_watcher</a> – 是一个小型实用程序，用于扫描您的无线网络，并显示当前连接到网络的所有计算机和设备的列表。</li></ul><h5 id="攻击：WEP-WPA-WPS-EAP"><a href="#攻击：WEP-WPA-WPS-EAP" class="headerlink" title="攻击：WEP / WPA / WPS / EAP"></a>攻击：WEP / WPA / WPS / EAP</h5><ul><li><a href="https://www.aircrack-ng.org/" target="_blank" rel="noopener">Aircrack-NG</a> – 是一套完整的工具来评估WiFi网络安全。</li><li><a href="https://sourceforge.net/projects/airsnort/" target="_blank" rel="noopener">AirSnort</a> – 是一种无线局域网（WLAN）工具，可以破解802.11b WEP网络上的加密密钥。</li><li><a href="http://www.willhackforsushi.com/?page_id=41" target="_blank" rel="noopener">Asleap</a> – 显示了专有的Cisco LEAP网络的严重缺陷。由于LEAP使用MS-CHAPv2的变体进行认证交换，因此易受加速脱机字典攻击。</li><li><a href="https://github.com/DominikStyp/auto-reaver" target="_blank" rel="noopener">auto-reaver</a> – 使用Reaver进行多个接入点攻击。</li><li><a href="https://github.com/Tylous/Auto_EAP" target="_blank" rel="noopener">Auto_EAP</a> – 自动强力登录攻击EAP网络。</li><li><a href="http://www.willhackforsushi.com/?page_id=50br%20/%3E" target="_blank" rel="noopener">coWPAtty</a> – 使用基于PSK的身份验证对WPA / WPA2网络实施脱机字典攻击。</li><li><a href="https://github.com/mikeryan/crackle" target="_blank" rel="noopener">crackle</a> – 破解和解密BLE加密。</li><li><a href="https://github.com/savio-code/fern-wifi-cracker" target="_blank" rel="noopener">fern-wifi-cracker</a> – Fern Wifi Cracker是一种无线安全审计和攻击软件程序，能够破解和恢复WEP / WPA / WPS密钥，并在基于无线或以太网的网络上运行其他基于网络的攻击。</li><li><a href="https://github.com/xtr4nge/FruityWifi" target="_blank" rel="noopener">FruityWiFi</a> – 是一种开源工具来审核无线网络。它允许用户通过直接使用Web界面或通过向其发送消息来部署高级攻击。</li><li><a href="https://digi.ninja/metasploit/getwlanprofiles.php" target="_blank" rel="noopener">Metasploit的getwlanprofiles</a> – 是一个简单的Meterpreter脚本，当对Windows 7或Vista框运行时，将提取并下载所有使用Windows客户端设置的无线配置文件。</li><li><a href="https://github.com/entropy1337/infernal-twin" target="_blank" rel="noopener">infernal-twin</a> – 这是邪恶的双重攻击自动（无线黑客）。</li><li><a href="https://code.google.com/archive/p/killerbee/" target="_blank" rel="noopener">killerbee</a> – 是一个基于Python的框架和工具集，用于探索和利用ZigBee和IEEE 802.15.4网络的安全性。</li><li><a href="http://git.kali.org/gitweb/?p=packages/mdk3.git;a=summary" target="_blank" rel="noopener">mdk3</a> – 是一种利用常规IEEE 802.11协议弱点的概念验证工具。</li><li><a href="https://github.com/wiire/pixiewps/" target="_blank" rel="noopener">PixieWPS</a> – 用C编写的工具用来强制脱机使用某些AP（低分辨率灰尘攻击）的低或不存在的熵的WPS引脚</li><li><a href="https://code.google.com/archive/p/reaver-wps/" target="_blank" rel="noopener">reaver-wps</a> – 对Wi-Fi保护设置（WPS）注册商PIN进行强力攻击，以恢复WPA / WPA2密码。</li><li><a href="http://wepcrack.sourceforge.net/" target="_blank" rel="noopener">WEPCrack</a> – 是一款用于打破802.11 WEP密钥的开源工具。</li><li><a href="https://github.com/DanMcInerney/wifijammer" target="_blank" rel="noopener">wifijammer</a> – 持续阻止所有wifi客户端/路由器。</li><li><a href="https://wifiphisher.org/docs.html" target="_blank" rel="noopener">Wifiphisher</a> – 针对Wi-Fi网络的自动网络钓鱼攻击。</li><li><a href="http://sid.rstack.org/static/articles/w/i/f/Wifitap_EN_9613.html" target="_blank" rel="noopener">Wifitap</a> – 通过使用流量注入的WiFi网络进行通信的概念验证。</li><li><a href="https://code.google.com/archive/p/wifite/" target="_blank" rel="noopener">Wifite</a> – 连续攻击多个WEP，WPA和WPS加密网络。</li><li><a href="https://github.com/cyrus-and/zizzania" target="_blank" rel="noopener">zizzania</a> – 嗅探无线流量监听WPA握手，并仅倾倒适合解密的帧（一个信标+ EAPOL帧+数据）。为了加快这个过程，zizzania向需要握手的站发送IEEE 802.11 DeAuth帧，正确处理重发和重新连接，并 试图限制发送到每个站的DeAuth帧的数量。</li></ul><h5 id="防御"><a href="#防御" class="headerlink" title="防御"></a>防御</h5><ul><li><a href="https://github.com/SYWorks/waidps" target="_blank" rel="noopener">waidps</a> – 无线审计，入侵检测与预防系统。</li></ul><h5 id="FAKE-AP"><a href="#FAKE-AP" class="headerlink" title="FAKE AP"></a>FAKE AP</h5><ul><li><a href="https://github.com/DanMcInerney/fakeAP" target="_blank" rel="noopener">fakeAP</a> – 使用1个命令在Kali中创建假AP。</li><li><a href="https://github.com/savio-code/ghost-phisher" target="_blank" rel="noopener">ghost-phisher</a> – 是使用Python编程编写的无线和以太网安全审计和攻击软件程序语言和Python Qt GUI库，该程序能够模拟接入点和部署。</li><li><a href="http://digi.ninja/jasager/" target="_blank" rel="noopener">Jasager</a> – 是一个无线上网的中间工具，它使用假接入点诱使无人值守的受害者连接到您的网络。</li><li><a href="https://digi.ninja/karma/" target="_blank" rel="noopener">karma</a> – 是一组接入点软件的补丁，以使其不仅响应于自身的探测请求，而且对所请求的任何ESSID进行响应。</li><li><a href="https://github.com/xdavidhu/mitmAP" target="_blank" rel="noopener">mitmAP</a> – 一个python程序来创建一个假的AP并嗅探数据。</li><li><a href="https://github.com/P0cL4bs/WiFi-Pumpkin" target="_blank" rel="noopener">WiFi-Pumpkin</a> – 是一个开放源代码的安全工具，它提供了Rogue接入点到中间人和网络攻击。</li></ul><h5 id="本地"><a href="#本地" class="headerlink" title="本地"></a>本地</h5><ul><li><a href="https://github.com/Viralmaniar/Wifi-Dumper" target="_blank" rel="noopener">Wifi-Dumper</a> – 转载Windows机器上连接的接入点的wifi配置文件和明文密码。</li><li><a href="https://github.com/LionSec/wifresti" target="_blank" rel="noopener">Wifresti</a> – 在Windows，Linux和Mac OS中找到无线网络密码。</li></ul><h5 id="Android"><a href="#Android" class="headerlink" title="Android"></a>Android</h5><ul><li><a href="https://github.com/chrisk44/Hijacker" target="_blank" rel="noopener">Hijacker</a> – Aircrack、Airodump、Aireplay、MDK3和Reaver GUI应用程序 – 需要监视器模式。</li></ul><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文原出处在&lt;a href=&quot;http://www.4hou.com/tools/5584.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;这里&lt;/a&gt;，我是为了查阅方便，特转载一份我这里;&lt;figure class=&quot;image-bubble&quot;&gt;
                &lt;div class=&quot;img-lightbox&quot;&gt;
                    &lt;div class=&quot;overlay&quot;&gt;&lt;/div&gt;
                    &lt;img src=&quot;/res/img/blog/安全攻防/嘚瑟.gif&quot; alt=&quot;嘚瑟&quot; title=&quot;&quot;&gt;
                &lt;/div&gt;
                &lt;div class=&quot;image-caption&quot;&gt;嘚瑟&lt;/div&gt;
            &lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="安全攻防" scheme="http://daodaoliang.com/categories/%E5%AE%89%E5%85%A8%E6%94%BB%E9%98%B2/"/>
    
    
      <category term="无线" scheme="http://daodaoliang.com/tags/%E6%97%A0%E7%BA%BF/"/>
    
      <category term="安全" scheme="http://daodaoliang.com/tags/%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>python爬虫</title>
    <link href="http://daodaoliang.com/Python%E5%AD%A6%E4%B9%A0/2018/04/25/Python%E5%AD%A6%E4%B9%A0-2018-04-25-python%E7%88%AC%E8%99%AB/"/>
    <id>http://daodaoliang.com/Python学习/2018/04/25/Python学习-2018-04-25-python爬虫/</id>
    <published>2018-04-24T16:00:00.000Z</published>
    <updated>2018-04-25T03:04:34.365Z</updated>
    
    <content type="html"><![CDATA[<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/res/img/blog/python学习/spider.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><a id="more"></a><h4 id="python的爬虫技能书"><a href="#python的爬虫技能书" class="headerlink" title="python的爬虫技能书"></a>python的爬虫技能书</h4><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/res/img/blog/python学习/python.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;image-bubble&quot;&gt;
                &lt;div class=&quot;img-lightbox&quot;&gt;
                    &lt;div class=&quot;overlay&quot;&gt;&lt;/div&gt;
                    &lt;img src=&quot;/res/img/blog/python学习/spider.png&quot; alt=&quot;&quot; title=&quot;&quot;&gt;
                &lt;/div&gt;
                &lt;div class=&quot;image-caption&quot;&gt;&lt;/div&gt;
            &lt;/figure&gt;
    
    </summary>
    
      <category term="Python学习" scheme="http://daodaoliang.com/categories/Python%E5%AD%A6%E4%B9%A0/"/>
    
    
  </entry>
  
  <entry>
    <title>Docker Community Edition 镜像使用帮助</title>
    <link href="http://daodaoliang.com/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/2018/04/03/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA-2018-04-03-DockerCommunityEdition%E9%95%9C%E5%83%8F%E4%BD%BF%E7%94%A8%E5%B8%AE%E5%8A%A9/"/>
    <id>http://daodaoliang.com/环境搭建/2018/04/03/环境搭建-2018-04-03-DockerCommunityEdition镜像使用帮助/</id>
    <published>2018-04-02T16:00:00.000Z</published>
    <updated>2018-04-03T07:27:19.233Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">作者 : daodaoliang@yeah.net</span><br><span class="line">日期 : 2018-04-03</span><br><span class="line">版本 : 0.0.1</span><br></pre></td></tr></table></figure><p>注意: 本镜像只提供 Debian/Ubuntu/Fedora/CentOS/RHEL 的 docker 软件包，非 dockerhub，本文章并非原创而是转载，原文在<a href="https://mirror.tuna.tsinghua.edu.cn/help/docker-ce/" target="_blank" rel="noopener">这里</a></p><a id="more"></a><p>[TOC]</p><h3 id="1-Debian-Ubuntu-用户"><a href="#1-Debian-Ubuntu-用户" class="headerlink" title="1. Debian/Ubuntu 用户"></a>1. Debian/Ubuntu 用户</h3><h4 id="1-1-准备工作"><a href="#1-1-准备工作" class="headerlink" title="1.1 准备工作"></a>1.1 准备工作</h4><p>以下内容根据 <a href="https://docs.docker.com/engine/installation/linux/docker-ce/debian/" target="_blank" rel="noopener">官方文档</a> 修改而来。</p><p>如果你过去安装过 docker，先删掉:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get remove docker docker-engine docker.io</span><br></pre></td></tr></table></figure><p>首先安装依赖:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install apt-transport-https ca-certificates curl gnupg2 software-properties-common</span><br></pre></td></tr></table></figure><p>根据你的发行版，下面的内容有所不同:</p><h4 id="1-2-debian-系统"><a href="#1-2-debian-系统" class="headerlink" title="1.2 debian 系统:"></a>1.2 debian 系统:</h4><p>信任 Docker 的 GPG 公钥:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add -</span><br></pre></td></tr></table></figure><p>对于 amd64 架构的计算机，添加软件仓库:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository \</span><br><span class="line">   <span class="string">"deb [arch=amd64] https://mirrors.tuna.tsinghua.edu.cn/docker-ce/linux/debian \</span></span><br><span class="line"><span class="string">   <span class="variable">$(lsb_release -cs)</span> \</span></span><br><span class="line"><span class="string">   stable"</span></span><br></pre></td></tr></table></figure><p>如果你是树莓派或其它ARM架构计算机，请运行:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">"deb [arch=armhf] https://mirrors.tuna.tsinghua.edu.cn/docker-ce/linux/debian \</span></span><br><span class="line"><span class="string">     <span class="variable">$(lsb_release -cs)</span> stable"</span> | \</span><br><span class="line">    sudo tee /etc/apt/sources.list.d/docker.list</span><br></pre></td></tr></table></figure><p>最后安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install docker-ce</span><br></pre></td></tr></table></figure><h4 id="1-3-ubuntu-系统"><a href="#1-3-ubuntu-系统" class="headerlink" title="1.3 ubuntu 系统:"></a>1.3 ubuntu 系统:</h4><p>信任 Docker 的 GPG 公钥:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -</span><br></pre></td></tr></table></figure><p>对于 amd64 架构的计算机，添加软件仓库:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository \</span><br><span class="line">   <span class="string">"deb [arch=amd64] https://mirrors.tuna.tsinghua.edu.cn/docker-ce/linux/ubuntu \</span></span><br><span class="line"><span class="string">   <span class="variable">$(lsb_release -cs)</span> \</span></span><br><span class="line"><span class="string">   stable"</span></span><br></pre></td></tr></table></figure><p>如果你是树莓派或其它ARM架构计算机，请运行:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">"deb [arch=armhf] https://mirrors.tuna.tsinghua.edu.cn/docker-ce/linux/ubuntu \</span></span><br><span class="line"><span class="string">     <span class="variable">$(lsb_release -cs)</span> stable"</span> | \</span><br><span class="line">    sudo tee /etc/apt/sources.list.d/docker.list</span><br></pre></td></tr></table></figure><p>最后安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install docker-ce</span><br></pre></td></tr></table></figure><h3 id="2-Fedora-CentOS-RHEL"><a href="#2-Fedora-CentOS-RHEL" class="headerlink" title="2. Fedora/CentOS/RHEL"></a>2. Fedora/CentOS/RHEL</h3><p>以下内容根据 <a href="https://docs.docker.com/engine/installation/linux/docker-ce/centos/" target="_blank" rel="noopener">官方文档</a> 修改而来。</p><h4 id="2-1-准备工作"><a href="#2-1-准备工作" class="headerlink" title="2.1 准备工作"></a>2.1 准备工作</h4><p>如果你之前安装过 docker，请先删掉</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum remove docker docker-common docker-selinux docker-engine</span><br></pre></td></tr></table></figure><p>安装一些依赖</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install -y yum-utils device-mapper-persistent-data lvm2</span><br></pre></td></tr></table></figure><h4 id="2-2-安装源"><a href="#2-2-安装源" class="headerlink" title="2.2 安装源"></a>2.2 安装源</h4><ul><li><strong>CentOS/RHEL</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O /etc/yum.repos.d/docker-ce.repo https://download.docker.com/linux/fedora/docker-ce.repo</span><br></pre></td></tr></table></figure><p>把软件仓库地址替换为 TUNA:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo sed -i <span class="string">'s+download.docker.com+mirrors.tuna.tsinghua.edu.cn/docker-ce+'</span> /etc/yum.repos.d/docker-ce.repo</span><br></pre></td></tr></table></figure><ul><li><strong>fedora</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O /etc/yum.repos.d/docker-ce.repo https://download.docker.com/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure><p>把软件仓库地址替换为 TUNA:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo sed -i <span class="string">'s+download.docker.com+mirrors.tuna.tsinghua.edu.cn/docker-ce+'</span> /etc/yum.repos.d/docker-ce.repo</span><br></pre></td></tr></table></figure><h4 id="2-3-安装"><a href="#2-3-安装" class="headerlink" title="2.3 安装"></a>2.3 安装</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo yum makecache fast</span><br><span class="line">sudo yum install docker-ce</span><br></pre></td></tr></table></figure><h3 id="3-简便化的安装"><a href="#3-简便化的安装" class="headerlink" title="3. 简便化的安装"></a>3. 简便化的安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL get.docker.com -o get-docker.sh</span><br><span class="line">sudo sh get-docker.sh --mirror Aliyun</span><br></pre></td></tr></table></figure><hr>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;作者 : daodaoliang@yeah.net&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;日期 : 2018-04-03&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;版本 : 0.0.1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;注意: 本镜像只提供 Debian/Ubuntu/Fedora/CentOS/RHEL 的 docker 软件包，非 dockerhub，本文章并非原创而是转载，原文在&lt;a href=&quot;https://mirror.tuna.tsinghua.edu.cn/help/docker-ce/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;这里&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="环境搭建" scheme="http://daodaoliang.com/categories/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="环境搭建" scheme="http://daodaoliang.com/tags/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
      <category term="docker" scheme="http://daodaoliang.com/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>linux下利用Autotools产生Makefiles</title>
    <link href="http://daodaoliang.com/linux%E5%AD%A6%E4%B9%A0/2018/03/27/linux%E5%AD%A6%E4%B9%A0-2018-3-27-linux%E4%B8%8B%E5%88%A9%E7%94%A8Autotools%E4%BA%A7%E7%94%9FMakefiles/"/>
    <id>http://daodaoliang.com/linux学习/2018/03/27/linux学习-2018-3-27-linux下利用Autotools产生Makefiles/</id>
    <published>2018-03-26T16:00:00.000Z</published>
    <updated>2018-03-27T06:56:26.895Z</updated>
    
    <content type="html"><![CDATA[<pre><code>作者: daodaoliang版本: V 0.0.1日期: 2018年03月27日</code></pre><p>挖坑中……，这是待整理的文章</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;pre&gt;&lt;code&gt;作者: daodaoliang
版本: V 0.0.1
日期: 2018年03月27日
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;挖坑中……，这是待整理的文章&lt;/p&gt;

      
    
    </summary>
    
      <category term="linux学习" scheme="http://daodaoliang.com/categories/linux%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="linux" scheme="http://daodaoliang.com/tags/linux/"/>
    
      <category term="autotools" scheme="http://daodaoliang.com/tags/autotools/"/>
    
      <category term="makefiles" scheme="http://daodaoliang.com/tags/makefiles/"/>
    
  </entry>
  
  <entry>
    <title>linux命令之Bc</title>
    <link href="http://daodaoliang.com/linux%E5%AD%A6%E4%B9%A0/2018/03/27/linux%E5%AD%A6%E4%B9%A0-2018-3-27-linux%E5%91%BD%E4%BB%A4%E4%B9%8BBc/"/>
    <id>http://daodaoliang.com/linux学习/2018/03/27/linux学习-2018-3-27-linux命令之Bc/</id>
    <published>2018-03-26T16:00:00.000Z</published>
    <updated>2018-03-27T07:39:15.735Z</updated>
    
    <content type="html"><![CDATA[<pre><code>作者: daodaoliang版本: V 0.0.1日期: 2018年03月27日</code></pre><a id="more"></a><p>[TOC]</p><h4 id="0x00-简介"><a href="#0x00-简介" class="headerlink" title="0x00 简介"></a>0x00 简介</h4><p>bc，即bench calculator的缩写，是一种任意精度计算器语言（an arbitrary precision calculator language），语法和C语言类似。bc是Unix 作业系统下的一个高精确度数学运算工具，小数点后最多可有2147483647位值。bc使用POSIX 1003.2草案标准，并作了若干扩展，包括多字符的变量名，以及完整的布尔表达式。bc可以通过在unix终端中输入bc进入。bc是文本界面，无GUI。</p><h4 id="0x01-选项值"><a href="#0x01-选项值" class="headerlink" title="0x01 选项值"></a>0x01 选项值</h4><p><img src="/res/img/blog/linux学习/bc.jpg" alt="这里是图"></p><ul><li>-i：强制进入交互式模式；</li><li>-l：定义使用的标准数学库</li><li>-w：对POSIX bc的扩展给出警告信息；</li><li>-q：不打印正常的GNU bc环境信息；</li><li>-v：显示指令版本信息；</li><li>-h：显示指令的帮助信息。</li></ul><h4 id="0x02-使用方式"><a href="#0x02-使用方式" class="headerlink" title="0x02 使用方式"></a>0x02 使用方式</h4><h5 id="0x021-交互式使用方式"><a href="#0x021-交互式使用方式" class="headerlink" title="0x021 交互式使用方式"></a>0x021 交互式使用方式</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# bc</span><br><span class="line">bc 1.06.95</span><br><span class="line">Copyright 1991-1994, 1997, 1998, 2000, 2004, 2006 Free Software Foundation, Inc.</span><br><span class="line">This is free software with ABSOLUTELY NO WARRANTY.</span><br><span class="line">For details type `warranty'.</span><br><span class="line">12.345*12.345</span><br><span class="line">152.399</span><br></pre></td></tr></table></figure><h5 id="0x022-通过管道符号"><a href="#0x022-通过管道符号" class="headerlink" title="0x022 通过管道符号"></a>0x022 通过管道符号</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# echo "12.345*12.456" | bc</span><br><span class="line">153.769</span><br></pre></td></tr></table></figure><h5 id="0x023-进制转换"><a href="#0x023-进制转换" class="headerlink" title="0x023 进制转换"></a>0x023 进制转换</h5><p>ibase是输入数字的进制，而obase就是输出数字的进制了。很好记，i是input，o是output。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bash-4.2$ echo "ibase=10;obase=2;98757" | bc</span><br><span class="line">11000000111000101</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bash-4.2$ echo "ibase=10;obase=3;98757" | bc</span><br><span class="line">12000110200</span><br></pre></td></tr></table></figure><hr>]]></content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;作者: daodaoliang
版本: V 0.0.1
日期: 2018年03月27日
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="linux学习" scheme="http://daodaoliang.com/categories/linux%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="linux" scheme="http://daodaoliang.com/tags/linux/"/>
    
      <category term="命令" scheme="http://daodaoliang.com/tags/%E5%91%BD%E4%BB%A4/"/>
    
      <category term="bc" scheme="http://daodaoliang.com/tags/bc/"/>
    
  </entry>
  
  <entry>
    <title>nginx运维笔记</title>
    <link href="http://daodaoliang.com/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/2018/03/22/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA-2018-3-22-nginx%E8%BF%90%E7%BB%B4%E7%AC%94%E8%AE%B0/"/>
    <id>http://daodaoliang.com/环境搭建/2018/03/22/环境搭建-2018-3-22-nginx运维笔记/</id>
    <published>2018-03-21T16:00:00.000Z</published>
    <updated>2018-05-08T02:30:52.257Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">作者 : daodaoliang@yeah.net(最初来源于github用户:@jaywcjlove)</span><br><span class="line">日期 : 2018-03-22</span><br><span class="line">版本 : 0.0.1</span><br></pre></td></tr></table></figure><p align="center"><br>  <a href="http://nginx.org/" target="_blank" rel="noopener"><br>    <img width="210" src="/res/img/blog/linux学习/nginx.svg"><br>  </a><br></p><a id="more"></a><p>Nginx 是一款面向性能设计的 HTTP 服务器，能反向代理 HTTP，HTTPS 和邮件相关(SMTP，POP3，IMAP)的协议链接。并且提供了负载均衡以及 HTTP 缓存。它的设计充分使用异步事件模型，削减上下文调度的开销，提高服务器并发能力。采用了模块化设计，提供了丰富模块的第三方模块。</p><p>所以关于 Nginx，有这些标签：「异步」「事件」「模块化」「高性能」「高并发」「反向代理」「负载均衡」</p><p>Linux系统：<code>Centos 7 x64</code><br>Nginx版本：<code>1.11.5</code></p><h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><!-- TOC --><ul><li><a href="#安装">安装</a><ul><li><a href="#安装依赖">安装依赖</a></li><li><a href="#下载">下载</a></li><li><a href="#编译安装">编译安装</a></li><li><a href="#nginx测试">nginx测试</a></li><li><a href="#设置全局nginx命令">设置全局nginx命令</a></li></ul></li><li><a href="#开机自启动">开机自启动</a></li><li><a href="#运维">运维</a><ul><li><a href="#服务管理">服务管理</a></li><li><a href="#重启服务防火墙报错解决">重启服务防火墙报错解决</a></li></ul></li><li><a href="#nginx卸载">nginx卸载</a></li><li><a href="#参数说明">参数说明</a></li><li><a href="#配置">配置</a><ul><li><a href="#常用正则">常用正则</a></li><li><a href="#全局变量">全局变量</a></li><li><a href="#符号参考">符号参考</a></li><li><a href="#配置文件">配置文件</a></li><li><a href="#内置预定义变量">内置预定义变量</a></li><li><a href="#反向代理">反向代理</a></li><li><a href="#负载均衡">负载均衡</a><ul><li><a href="#rr">RR</a></li><li><a href="#权重">权重</a></li><li><a href="#ip_hash">ip_hash</a></li><li><a href="#fair">fair</a></li><li><a href="#url_hash">url_hash</a></li></ul></li><li><a href="#屏蔽ip">屏蔽ip</a></li></ul></li><li><a href="#第三方模块安装方法">第三方模块安装方法</a></li><li><a href="#重定向">重定向</a><ul><li><a href="#重定向整个网站">重定向整个网站</a></li><li><a href="#重定向单页">重定向单页</a></li><li><a href="#重定向整个子路径">重定向整个子路径</a></li></ul></li><li><a href="#性能">性能</a><ul><li><a href="#内容缓存">内容缓存</a></li><li><a href="#gzip压缩">Gzip压缩</a></li><li><a href="#打开文件缓存">打开文件缓存</a></li><li><a href="#ssl缓存">SSL缓存</a></li><li><a href="#上游keepalive">上游Keepalive</a></li><li><a href="#监控">监控</a></li></ul></li><li><a href="#常见使用场景">常见使用场景</a><ul><li><a href="#跨域问题">跨域问题</a></li><li><a href="#跳转到带www的域上面">跳转到带www的域上面</a></li><li><a href="#代理转发">代理转发</a></li><li><a href="#代理转发连接替换">代理转发连接替换</a></li><li><a href="#ssl配置">ssl配置</a></li><li><a href="#强制将http重定向到https">强制将http重定向到https</a></li><li><a href="#两个虚拟主机">两个虚拟主机</a></li><li><a href="#虚拟主机标准配置">虚拟主机标准配置</a></li><li><a href="#防盗链">防盗链</a></li><li><a href="#虚拟目录配置">虚拟目录配置</a></li><li><a href="#防盗图配置">防盗图配置</a></li><li><a href="#屏蔽git等文件">屏蔽.git等文件</a></li><li><a href="#域名路径加不加需要都能正常访问">域名路径加不加需要都能正常访问</a></li></ul></li><li><a href="#错误问题">错误问题</a></li><li><a href="#精品文章参考">精品文章参考</a></li></ul><!-- /TOC --><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h3><blockquote><p>prce(重定向支持)和openssl(https支持，如果不需要https可以不安装。)</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum install -y pcre-devel </span><br><span class="line">yum -y install gcc make gcc-c++ wget</span><br><span class="line">yum -y install openssl openssl-devel</span><br></pre></td></tr></table></figure><p>CentOS 6.5 我安装的时候是选择的“基本服务器”，默认这两个包都没安装全，所以这两个都运行安装即可。</p><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p><a href="http://nginx.org/download/" target="_blank" rel="noopener">nginx的所有版本在这里</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">wget http://nginx.org/download/nginx-1.13.3.tar.gz</span><br><span class="line">wget http://nginx.org/download/nginx-1.13.7.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果没有安装wget</span></span><br><span class="line"><span class="comment"># 下载已编译版本</span></span><br><span class="line">$ yum install wget</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解压压缩包</span></span><br><span class="line">tar zxf nginx-1.13.3.tar.gz</span><br></pre></td></tr></table></figure><h3 id="编译安装"><a href="#编译安装" class="headerlink" title="编译安装"></a>编译安装</h3><p>然后进入目录编译安装，<a href="#参数说明">configure参数说明</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> nginx-1.11.5</span><br><span class="line">./configure</span><br><span class="line"></span><br><span class="line">....</span><br><span class="line">Configuration summary</span><br><span class="line">  + using system PCRE library</span><br><span class="line">  + OpenSSL library is not used</span><br><span class="line">  + using system zlib library</span><br><span class="line"></span><br><span class="line">  nginx path prefix: <span class="string">"/usr/local/nginx"</span></span><br><span class="line">  nginx binary file: <span class="string">"/usr/local/nginx/sbin/nginx"</span></span><br><span class="line">  nginx modules path: <span class="string">"/usr/local/nginx/modules"</span></span><br><span class="line">  nginx configuration prefix: <span class="string">"/usr/local/nginx/conf"</span></span><br><span class="line">  nginx configuration file: <span class="string">"/usr/local/nginx/conf/nginx.conf"</span></span><br><span class="line">  nginx pid file: <span class="string">"/usr/local/nginx/logs/nginx.pid"</span></span><br><span class="line">  nginx error <span class="built_in">log</span> file: <span class="string">"/usr/local/nginx/logs/error.log"</span></span><br><span class="line">  nginx http access <span class="built_in">log</span> file: <span class="string">"/usr/local/nginx/logs/access.log"</span></span><br><span class="line">  nginx http client request body temporary files: <span class="string">"client_body_temp"</span></span><br><span class="line">  nginx http proxy temporary files: <span class="string">"proxy_temp"</span></span><br><span class="line">  nginx http fastcgi temporary files: <span class="string">"fastcgi_temp"</span></span><br><span class="line">  nginx http uwsgi temporary files: <span class="string">"uwsgi_temp"</span></span><br><span class="line">  nginx http scgi temporary files: <span class="string">"scgi_temp"</span></span><br></pre></td></tr></table></figure><p>安装报错误的话比如：“C compiler cc is not found”，这个就是缺少编译环境，安装一下就可以了 <strong>yum -y install gcc make gcc-c++ openssl-devel</strong></p><p>如果没有error信息，就可以执行下边的安装了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><h3 id="nginx测试"><a href="#nginx测试" class="headerlink" title="nginx测试"></a>nginx测试</h3><p>运行下面命令会出现两个结果，一般情况nginx会安装在<code>/usr/local/nginx</code>目录中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/nginx/sbin/</span><br><span class="line">./nginx -t</span><br><span class="line"></span><br><span class="line"><span class="comment"># nginx: the configuration file /usr/local/nginx/conf/nginx.conf syntax is ok</span></span><br><span class="line"><span class="comment"># nginx: configuration file /usr/local/nginx/conf/nginx.conf test is successful</span></span><br></pre></td></tr></table></figure><h3 id="设置全局nginx命令"><a href="#设置全局nginx命令" class="headerlink" title="设置全局nginx命令"></a>设置全局nginx命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi ~/.bash_profile</span><br></pre></td></tr></table></figure><p>将下面内容添加到 <code>~/.bash_profile</code> 文件中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PATH=<span class="variable">$PATH</span>:<span class="variable">$HOME</span>/bin:/usr/<span class="built_in">local</span>/nginx/sbin/</span><br><span class="line"><span class="built_in">export</span> PATH</span><br></pre></td></tr></table></figure><p>运行命令 <strong><code>source ~/.bash_profile</code></strong> 让配置立即生效。你就可以全局运行 <code>nginx</code> 命令了。</p><h2 id="开机自启动"><a href="#开机自启动" class="headerlink" title="开机自启动"></a>开机自启动</h2><p><strong>开机自启动方法一：</strong></p><p>编辑 <strong>vi /lib/systemd/system/nginx.service</strong> 文件，没有创建一个 <strong>touch nginx.service</strong> 然后将如下内容根据具体情况进行修改后，添加到nginx.service文件中：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=nginx</span><br><span class="line">After=network.target remote-fs.target nss-lookup.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line"></span><br><span class="line">Type=forking</span><br><span class="line">PIDFile=/var/run/nginx.pid</span><br><span class="line">ExecStartPre=/usr/<span class="built_in">local</span>/nginx/sbin/nginx -t -c /usr/<span class="built_in">local</span>/nginx/conf/nginx.conf</span><br><span class="line">ExecStart=/usr/<span class="built_in">local</span>/nginx/sbin/nginx -c /usr/<span class="built_in">local</span>/nginx/conf/nginx.conf</span><br><span class="line">ExecReload=/bin/<span class="built_in">kill</span> -s HUP <span class="variable">$MAINPID</span></span><br><span class="line">ExecStop=/bin/<span class="built_in">kill</span> -s QUIT <span class="variable">$MAINPID</span></span><br><span class="line">PrivateTmp=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><ul><li><code>[Unit]</code>:服务的说明  </li><li><code>Description</code>:描述服务  </li><li><code>After</code>:描述服务类别  </li><li><code>[Service]</code>服务运行参数的设置  </li><li><code>Type=forking</code>是后台运行的形式  </li><li><code>ExecStart</code>为服务的具体运行命令  </li><li><code>ExecReload</code>为重启命令  </li><li><code>ExecStop</code>为停止命令  </li><li><code>PrivateTmp=True</code>表示给服务分配独立的临时空间  </li></ul><p>注意：<code>[Service]</code>的启动、重启、停止命令全部要求使用绝对路径。</p><p><code>[Install]</code>运行级别下服务安装的相关设置，可设置为多用户，即系统运行级别为<code>3</code>。</p><p>保存退出。</p><p>设置开机启动，使配置生效：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动nginx服务</span></span><br><span class="line">systemctl start nginx.service</span><br><span class="line"><span class="comment"># 停止开机自启动</span></span><br><span class="line">systemctl <span class="built_in">disable</span> nginx.service</span><br><span class="line"><span class="comment"># 查看服务当前状态</span></span><br><span class="line">systemctl status nginx.service</span><br><span class="line"><span class="comment"># 查看所有已启动的服务</span></span><br><span class="line">systemctl list-units --<span class="built_in">type</span>=service</span><br><span class="line"><span class="comment"># 重新启动服务</span></span><br><span class="line">systemctl restart nginx.service</span><br><span class="line"><span class="comment"># 设置开机自启动</span></span><br><span class="line">systemctl <span class="built_in">enable</span> nginx.service</span><br><span class="line"><span class="comment"># 输出下面内容表示成功了</span></span><br><span class="line">Created symlink from /etc/systemd/system/multi-user.target.wants/nginx.service to /usr/lib/systemd/system/nginx.service.</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">systemctl is-enabled servicename.service <span class="comment"># 查询服务是否开机启动</span></span><br><span class="line">systemctl <span class="built_in">enable</span> *.service <span class="comment"># 开机运行服务</span></span><br><span class="line">systemctl <span class="built_in">disable</span> *.service <span class="comment"># 取消开机运行</span></span><br><span class="line">systemctl start *.service <span class="comment"># 启动服务</span></span><br><span class="line">systemctl stop *.service <span class="comment"># 停止服务</span></span><br><span class="line">systemctl restart *.service <span class="comment"># 重启服务</span></span><br><span class="line">systemctl reload *.service <span class="comment"># 重新加载服务配置文件</span></span><br><span class="line">systemctl status *.service <span class="comment"># 查询服务运行状态</span></span><br><span class="line">systemctl --failed <span class="comment"># 显示启动失败的服务</span></span><br></pre></td></tr></table></figure><p>注：*代表某个服务的名字，如http的服务名为httpd</p><p><strong>开机自启动方法二：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/rc.local</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在 rc.local 文件中，添加下面这条命令</span></span><br><span class="line">/usr/<span class="built_in">local</span>/nginx/sbin/nginx start</span><br></pre></td></tr></table></figure><p>如果开机后发现自启动脚本没有执行，你要去确认一下rc.local这个文件的访问权限是否是可执行的，因为rc.local默认是不可执行的。修改rc.local访问权限，增加可执行权限：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># /etc/rc.local是/etc/rc.d/rc.local的软连接，</span></span><br><span class="line">chmod +x /etc/rc.d/rc.local</span><br></pre></td></tr></table></figure><p>官方脚本 <a href="https://www.nginx.com/resources/wiki/start/topics/examples/redhatnginxinit/" target="_blank" rel="noopener">ed Hat NGINX Init Script</a>。</p><h2 id="运维"><a href="#运维" class="headerlink" title="运维"></a>运维</h2><h3 id="服务管理"><a href="#服务管理" class="headerlink" title="服务管理"></a>服务管理</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动</span></span><br><span class="line">/usr/<span class="built_in">local</span>/nginx/sbin/nginx</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启</span></span><br><span class="line">/usr/<span class="built_in">local</span>/nginx/sbin/nginx -s reload</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭进程</span></span><br><span class="line">/usr/<span class="built_in">local</span>/nginx/sbin/nginx -s stop</span><br><span class="line"></span><br><span class="line"><span class="comment"># 平滑关闭nginx</span></span><br><span class="line">/usr/<span class="built_in">local</span>/nginx/sbin/nginx -s quit</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看nginx的安装状态，</span></span><br><span class="line">/usr/<span class="built_in">local</span>/nginx/sbin/nginx -V</span><br></pre></td></tr></table></figure><p><strong>关闭防火墙，或者添加防火墙规则就可以测试了</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service iptables stop</span><br></pre></td></tr></table></figure><p>或者编辑配置文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/sysconfig/iptables</span><br></pre></td></tr></table></figure><p>添加这样一条开放80端口的规则后保存：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-A INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT</span><br></pre></td></tr></table></figure><p>重启服务即可:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">service iptables restart</span><br><span class="line"><span class="comment"># 命令进行查看目前nat</span></span><br><span class="line">iptables -t nat -L</span><br></pre></td></tr></table></figure><h3 id="重启服务防火墙报错解决"><a href="#重启服务防火墙报错解决" class="headerlink" title="重启服务防火墙报错解决"></a>重启服务防火墙报错解决</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">service iptables restart</span><br><span class="line"><span class="comment"># Redirecting to /bin/systemctl restart  iptables.service</span></span><br><span class="line"><span class="comment"># Failed to restart iptables.service: Unit iptables.service failed to load: No such file or directory.</span></span><br></pre></td></tr></table></figure><p>在CentOS 7或RHEL 7或Fedora中防火墙由 <strong>firewalld</strong> 来管理，当然你可以还原传统的管理方式。或则使用新的命令进行管理。<br>假如采用传统请执行一下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 传统命令</span></span><br><span class="line">systemctl stop firewalld</span><br><span class="line">systemctl mask firewalld</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装命令</span></span><br><span class="line">yum install iptables-services</span><br><span class="line"></span><br><span class="line">systemctl <span class="built_in">enable</span> iptables </span><br><span class="line">service iptables restart</span><br></pre></td></tr></table></figure><h2 id="nginx卸载"><a href="#nginx卸载" class="headerlink" title="nginx卸载"></a>nginx卸载</h2><p>如果通过yum安装，使用下面命令安装。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum remove nginx</span><br></pre></td></tr></table></figure><p>编译安装，删除/usr/local/nginx目录即可<br>如果配置了自启动脚本，也需要删除。</p><h2 id="参数说明"><a href="#参数说明" class="headerlink" title="参数说明"></a>参数说明</h2><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>–prefix=<code>&lt;path&gt;</code></td><td>Nginx安装路径。如果没有指定，默认为 /usr/local/nginx。</td></tr><tr><td>–sbin-path=<code>&lt;path&gt;</code></td><td>Nginx可执行文件安装路径。只能安装时指定，如果没有指定，默认为<code>&lt;prefix&gt;</code>/sbin/nginx。</td></tr><tr><td>–conf-path=<code>&lt;path&gt;</code></td><td>在没有给定-c选项下默认的nginx.conf的路径。如果没有指定，默认为<code>&lt;prefix&gt;</code>/conf/nginx.conf。</td></tr><tr><td>–pid-path=<code>&lt;path&gt;</code></td><td>在nginx.conf中没有指定pid指令的情况下，默认的nginx.pid的路径。如果没有指定，默认为 <code>&lt;prefix&gt;</code>/logs/nginx.pid。</td></tr><tr><td>–lock-path=<code>&lt;path&gt;</code></td><td>nginx.lock文件的路径。</td></tr><tr><td>–error-log-path=<code>&lt;path&gt;</code></td><td>在nginx.conf中没有指定error_log指令的情况下，默认的错误日志的路径。如果没有指定，默认为 <code>&lt;prefix&gt;</code>/- logs/error.log。</td></tr><tr><td>–http-log-path=<code>&lt;path&gt;</code></td><td>在nginx.conf中没有指定access_log指令的情况下，默认的访问日志的路径。如果没有指定，默认为 <code>&lt;prefix&gt;</code>/- logs/access.log。</td></tr><tr><td>–user=<code>&lt;user&gt;</code></td><td>在nginx.conf中没有指定user指令的情况下，默认的nginx使用的用户。如果没有指定，默认为 nobody。</td></tr><tr><td>–group=<code>&lt;group&gt;</code></td><td>在nginx.conf中没有指定user指令的情况下，默认的nginx使用的组。如果没有指定，默认为 nobody。</td></tr><tr><td>–builddir=DIR</td><td>指定编译的目录</td></tr><tr><td>–with-rtsig_module</td><td>启用 rtsig 模块</td></tr><tr><td>–with-select_module –without-select_module</td><td>允许或不允许开启SELECT模式，如果 configure 没有找到更合适的模式，比如：kqueue(sun os),epoll (linux kenel 2.6+), rtsig(- 实时信号)或者/dev/poll(一种类似select的模式，底层实现与SELECT基本相 同，都是采用轮训方法) SELECT模式将是默认安装模式</td></tr><tr><td>–with-poll_module –without-poll_module</td><td>Whether or not to enable the poll module. This module is enabled by, default if a more suitable method such as kqueue, epoll, rtsig or /dev/poll is not discovered by configure.</td></tr><tr><td>–with-http_ssl_module</td><td>Enable ngx_http_ssl_module. Enables SSL support and the ability to handle HTTPS requests. Requires OpenSSL. On Debian, this is libssl-dev. 开启HTTP SSL模块，使NGINX可以支持HTTPS请求。这个模块需要已经安装了OPENSSL，在DEBIAN上是libssl</td></tr><tr><td>–with-http_realip_module</td><td>启用 ngx_http_realip_module</td></tr><tr><td>–with-http_addition_module</td><td>启用 ngx_http_addition_module</td></tr><tr><td>–with-http_sub_module</td><td>启用 ngx_http_sub_module</td></tr><tr><td>–with-http_dav_module</td><td>启用 ngx_http_dav_module</td></tr><tr><td>–with-http_flv_module</td><td>启用 ngx_http_flv_module</td></tr><tr><td>–with-http_stub_status_module</td><td>启用 “server status” 页</td></tr><tr><td>–without-http_charset_module</td><td>禁用 ngx_http_charset_module</td></tr><tr><td>–without-http_gzip_module</td><td>禁用 ngx_http_gzip_module. 如果启用，需要 zlib 。</td></tr><tr><td>–without-http_ssi_module</td><td>禁用 ngx_http_ssi_module</td></tr><tr><td>–without-http_userid_module</td><td>禁用 ngx_http_userid_module</td></tr><tr><td>–without-http_access_module</td><td>禁用 ngx_http_access_module</td></tr><tr><td>–without-http_auth_basic_module</td><td>禁用 ngx_http_auth_basic_module</td></tr><tr><td>–without-http_autoindex_module</td><td>禁用 ngx_http_autoindex_module</td></tr><tr><td>–without-http_geo_module</td><td>禁用 ngx_http_geo_module</td></tr><tr><td>–without-http_map_module</td><td>禁用 ngx_http_map_module</td></tr><tr><td>–without-http_referer_module</td><td>禁用 ngx_http_referer_module</td></tr><tr><td>–without-http_rewrite_module</td><td>禁用 ngx_http_rewrite_module. 如果启用需要 PCRE 。</td></tr><tr><td>–without-http_proxy_module</td><td>禁用 ngx_http_proxy_module</td></tr><tr><td>–without-http_fastcgi_module</td><td>禁用 ngx_http_fastcgi_module</td></tr><tr><td>–without-http_memcached_module</td><td>禁用 ngx_http_memcached_module</td></tr><tr><td>–without-http_limit_zone_module</td><td>禁用 ngx_http_limit_zone_module</td></tr><tr><td>–without-http_empty_gif_module</td><td>禁用 ngx_http_empty_gif_module</td></tr><tr><td>–without-http_browser_module</td><td>禁用 ngx_http_browser_module</td></tr><tr><td>–without-http_upstream_ip_hash_module</td><td>禁用 ngx_http_upstream_ip_hash_module</td></tr><tr><td>–with-http_perl_module</td><td>启用 ngx_http_perl_module</td></tr><tr><td>–with-perl_modules_path=PATH</td><td>指定 perl 模块的路径</td></tr><tr><td>–with-perl=PATH</td><td>指定 perl 执行文件的路径</td></tr><tr><td>–http-log-path=PATH</td><td>Set path to the http access log</td></tr><tr><td>–http-client-body-temp-path=PATH</td><td>Set path to the http client request body temporary files</td></tr><tr><td>–http-proxy-temp-path=PATH</td><td>Set path to the http proxy temporary files</td></tr><tr><td>–http-fastcgi-temp-path=PATH</td><td>Set path to the http fastcgi temporary files</td></tr><tr><td>–without-http</td><td>禁用 HTTP server</td></tr><tr><td>–with-mail</td><td>启用 IMAP4/POP3/SMTP 代理模块</td></tr><tr><td>–with-mail_ssl_module</td><td>启用 ngx_mail_ssl_module</td></tr><tr><td>–with-cc=PATH</td><td>指定 C 编译器的路径</td></tr><tr><td>–with-cpp=PATH</td><td>指定 C 预处理器的路径</td></tr><tr><td>–with-cc-opt=OPTIONS</td><td>Additional parameters which will be added to the variable CFLAGS. With the use of the system library PCRE in FreeBSD, it is necessary to indicate –with-cc-opt=”-I /usr/local/include”. If we are using select() and it is necessary to increase the number of file descriptors, then this also can be assigned here: –with-cc-opt=”-D FD_SETSIZE=2048”.</td></tr><tr><td>–with-ld-opt=OPTIONS</td><td>Additional parameters passed to the linker. With the use of the system library PCRE in - FreeBSD, it is necessary to indicate –with-ld-opt=”-L /usr/local/lib”.</td></tr><tr><td>–with-cpu-opt=CPU</td><td>为特定的 CPU 编译，有效的值包括：pentium, pentiumpro, pentium3, pentium4, athlon, opteron, amd64, sparc32, sparc64, ppc64</td></tr><tr><td>–without-pcre</td><td>禁止 PCRE 库的使用。同时也会禁止 HTTP rewrite 模块。在 “location” 配置指令中的正则表达式也需要 PCRE 。</td></tr><tr><td>–with-pcre=DIR</td><td>指定 PCRE 库的源代码的路径。</td></tr><tr><td>–with-pcre-opt=OPTIONS</td><td>Set additional options for PCRE building.</td></tr><tr><td>–with-md5=DIR</td><td>Set path to md5 library sources.</td></tr><tr><td>–with-md5-opt=OPTIONS</td><td>Set additional options for md5 building.</td></tr><tr><td>–with-md5-asm</td><td>Use md5 assembler sources.</td></tr><tr><td>–with-sha1=DIR</td><td>Set path to sha1 library sources.</td></tr><tr><td>–with-sha1-opt=OPTIONS</td><td>Set additional options for sha1 building.</td></tr><tr><td>–with-sha1-asm</td><td>Use sha1 assembler sources.</td></tr><tr><td>–with-zlib=DIR</td><td>Set path to zlib library sources.</td></tr><tr><td>–with-zlib-opt=OPTIONS</td><td>Set additional options for zlib building.</td></tr><tr><td>–with-zlib-asm=CPU</td><td>Use zlib assembler sources optimized for specified CPU, valid values are: pentium, pentiumpro</td></tr><tr><td>–with-openssl=DIR</td><td>Set path to OpenSSL library sources</td></tr><tr><td>–with-openssl-opt=OPTIONS</td><td>Set additional options for OpenSSL building</td></tr><tr><td>–with-debug</td><td>启用调试日志</td></tr><tr><td>–add-module=PATH</td><td>Add in a third-party module found in directory PATH</td></tr></tbody></table><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>在Centos 默认配置文件在 <strong>/usr/local/nginx-1.5.1/conf/nginx.conf</strong> 我们要在这里配置一些文件。nginx.conf是主配置文件，由若干个部分组成，每个大括号<code>{}</code>表示一个部分。每一行指令都由分号结束<code>;</code>，标志着一行的结束。</p><h3 id="常用正则"><a href="#常用正则" class="headerlink" title="常用正则"></a>常用正则</h3><table><thead><tr><th>正则</th><th>说明</th><th>正则</th><th>说明</th></tr></thead><tbody><tr><td><code>.</code></td><td>匹配除换行符以外的任意字符</td><td><code>$</code></td><td>匹配字符串的结束</td></tr><tr><td><code>?</code></td><td>重复0次或1次</td><td><code>{n}</code></td><td>重复n次</td></tr><tr><td><code>+</code></td><td>重复1次或更多次</td><td><code>{n,}</code></td><td>重复n次或更多次</td></tr><tr><td><code>*</code></td><td>重复0次或更多次</td><td><code>[c]</code></td><td>匹配单个字符c</td></tr><tr><td><code>\d</code></td><td>匹配数字</td><td><code>[a-z]</code></td><td>匹配a-z小写字母的任意一个</td></tr><tr><td><code>^</code></td><td>匹配字符串的开始</td><td>-</td><td>-</td></tr></tbody></table><h3 id="全局变量"><a href="#全局变量" class="headerlink" title="全局变量"></a>全局变量</h3><table><thead><tr><th>变量</th><th>说明</th><th>变量</th><th>说明</th></tr></thead><tbody><tr><td>$args</td><td>这个变量等于请求行中的参数，同$query_string</td><td>$remote_port</td><td>客户端的端口。</td></tr><tr><td>$content_length</td><td>请求头中的Content-length字段。</td><td>$remote_user</td><td>已经经过Auth Basic Module验证的用户名。</td></tr><tr><td>$content_type</td><td>请求头中的Content-Type字段。</td><td>$request_filename</td><td>当前请求的文件路径，由root或alias指令与URI请求生成。</td></tr><tr><td>$document_root</td><td>当前请求在root指令中指定的值。</td><td>$scheme</td><td>HTTP方法（如http，https）。</td></tr><tr><td>$host</td><td>请求主机头字段，否则为服务器名称。</td><td>$server_protocol</td><td>请求使用的协议，通常是HTTP/1.0或HTTP/1.1。</td></tr><tr><td>$http_user_agent</td><td>客户端agent信息</td><td>$server_addr</td><td>服务器地址，在完成一次系统调用后可以确定这个值。</td></tr><tr><td>$http_cookie</td><td>客户端cookie信息</td><td>$server_name</td><td>服务器名称。</td></tr><tr><td>$limit_rate</td><td>这个变量可以限制连接速率。</td><td>$server_port</td><td>请求到达服务器的端口号。</td></tr><tr><td>$request_method</td><td>客户端请求的动作，通常为GET或POST。</td><td>$request_uri</td><td>包含请求参数的原始URI，不包含主机名，如：/foo/bar.php?arg=baz。</td></tr><tr><td>$remote_addr</td><td>客户端的IP地址。</td><td>$uri</td><td>不带请求参数的当前URI，$uri不包含主机名，如/foo/bar.html。</td></tr><tr><td>$document_uri</td><td>与$uri相同。</td><td>-</td><td>-</td></tr></tbody></table><p>例如请求：<code>http://localhost:3000/test1/test2/test.php</code></p><p>$host：localhost<br>$server_port：3000<br>$request_uri：/test1/test2/test.php<br>$document_uri：/test1/test2/test.php<br>$document_root：/var/www/html<br>$request_filename：/var/www/html/test1/test2/test.php  </p><h3 id="符号参考"><a href="#符号参考" class="headerlink" title="符号参考"></a>符号参考</h3><table><thead><tr><th>符号</th><th>说明</th><th>符号</th><th>说明</th><th>符号</th><th>说明</th></tr></thead><tbody><tr><td>k,K</td><td>千字节</td><td>m,M</td><td>兆字节</td><td>ms</td><td>毫秒</td></tr><tr><td>s</td><td>秒</td><td>m</td><td>分钟</td><td>h</td><td>小时</td></tr><tr><td>d</td><td>日</td><td>w</td><td>周</td><td>M</td><td>一个月, 30天</td></tr></tbody></table><p>例如，”8k”，”1m” 代表字节数计量。<br>例如，”1h 30m”，”1y 6M”。代表 “1小时 30分”，”1年零6个月”。 </p><h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><p>nginx 的配置系统由一个主配置文件和其他一些辅助的配置文件构成。这些配置文件均是纯文本文件，全部位于 nginx 安装目录下的 conf 目录下。</p><p>指令由 nginx 的各个模块提供，不同的模块会提供不同的指令来实现配置。<br>指令除了 Key-Value 的形式，还有作用域指令。</p><p>nginx.conf 中的配置信息，根据其逻辑上的意义，对它们进行了分类，也就是分成了多个作用域，或者称之为配置指令上下文。不同的作用域含有一个或者多个配置项。</p><p>下面的这些上下文指令是用的比较多：</p><table><thead><tr><th>Directive</th><th>Description</th><th>Contains Directive</th></tr></thead><tbody><tr><td>main</td><td>nginx 在运行时与具体业务功能（比如 http 服务或者 email 服务代理）无关的一些参数，比如工作进程数，运行的身份等。</td><td>user, worker_processes, error_log, events, http, mail</td></tr><tr><td>http</td><td>与提供 http 服务相关的一些配置参数。例如：是否使用 keepalive 啊，是否使用 gzip 进行压缩等。</td><td>server</td></tr><tr><td>server</td><td>http 服务上支持若干虚拟主机。每个虚拟主机一个对应的 server 配置项，配置项里面包含该虚拟主机相关的配置。在提供 mail 服务的代理时，也可以建立若干 server. 每个 server 通过监听的地址来区分。</td><td>listen, server_name, access_log, location, protocol, proxy, smtp_auth, xclient</td></tr><tr><td>location</td><td>http 服务中，某些特定的 URL 对应的一系列配置项。</td><td>index, root</td></tr><tr><td>mail</td><td>实现 email 相关的 SMTP/IMAP/POP3 代理时，共享的一些配置项（因为可能实现多个代理，工作在多个监听地址上）。</td><td>server, http, imap_capabilities</td></tr><tr><td>include</td><td>以便增强配置文件的可读性，使得部分配置文件可以重新使用。</td><td>-</td></tr><tr><td>valid_referers</td><td>用来校验Http请求头Referer是否有效。</td><td>-</td></tr><tr><td>try_files</td><td>用在server部分，不过最常见的还是用在location部分，它会按照给定的参数顺序进行尝试，第一个被匹配到的将会被使用。</td><td>-</td></tr><tr><td>if</td><td>当在location块中使用if指令，在某些情况下它并不按照预期运行，一般来说避免使用if指令。</td><td>-</td></tr></tbody></table><p>例如我们再 <strong>nginx.conf</strong> 里面引用两个配置 vhost/example.com.conf 和 vhost/gitlab.com.conf 它们都被放在一个我自己新建的目录 vhost 下面。nginx.conf 配置如下：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">worker_processes</span>  <span class="number">1</span>;</span><br><span class="line"><span class="section">events</span> &#123;</span><br><span class="line">    <span class="attribute">worker_connections</span>  <span class="number">1024</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="section">http</span> &#123;</span><br><span class="line">    <span class="attribute">include</span>       mime.types;</span><br><span class="line">    <span class="attribute">default_type</span>  application/octet-stream;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '</span></span><br><span class="line">    <span class="comment">#                  '$status $body_bytes_sent "$http_referer" '</span></span><br><span class="line">    <span class="comment">#                  '"$http_user_agent" "$http_x_forwarded_for"';</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#access_log  logs/access.log  main;</span></span><br><span class="line"></span><br><span class="line">    <span class="attribute">sendfile</span>        <span class="literal">on</span>;</span><br><span class="line">    <span class="comment">#tcp_nopush     on;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#keepalive_timeout  0;</span></span><br><span class="line">    <span class="attribute">keepalive_timeout</span>  <span class="number">65</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#gzip  on;</span></span><br><span class="line">    <span class="section">server</span> &#123;</span><br><span class="line">        <span class="attribute">listen</span>       <span class="number">80</span>;</span><br><span class="line">        <span class="attribute">server_name</span>  localhost;</span><br><span class="line">        <span class="attribute">location</span> / &#123;</span><br><span class="line">            <span class="attribute">root</span>   html;</span><br><span class="line">            <span class="attribute">index</span>  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="attribute">error_page</span>   <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span>  /50x.html;</span><br><span class="line">        <span class="attribute">location</span> = /50x.html &#123;</span><br><span class="line">            <span class="attribute">root</span>   html;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="attribute">include</span>  vhost/example.com.conf;</span><br><span class="line">    <span class="attribute">include</span>  vhost/gitlab.com.conf;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>简单的配置: example.com.conf</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="comment">#侦听的80端口</span></span><br><span class="line">    <span class="attribute">listen</span>       <span class="number">80</span>;</span><br><span class="line">    <span class="attribute">server_name</span>  baidu.com app.baidu.com; <span class="comment"># 这里指定域名</span></span><br><span class="line">    <span class="attribute">index</span>        index.html index.htm;    <span class="comment"># 这里指定默认入口页面</span></span><br><span class="line">    <span class="attribute">root</span> /home/www/app.baidu.com;         <span class="comment"># 这里指定目录</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="内置预定义变量"><a href="#内置预定义变量" class="headerlink" title="内置预定义变量"></a>内置预定义变量</h3><p>Nginx提供了许多预定义的变量，也可以通过使用set来设置变量。你可以在if中使用预定义变量，也可以将它们传递给代理服务器。以下是一些常见的预定义变量，<a href="http://nginx.org/en/docs/varindex.html" target="_blank" rel="noopener">更多详见</a></p><table><thead><tr><th>变量名称</th><th>值</th></tr></thead><tbody><tr><td>$args_name</td><td>在请求中的name参数</td></tr><tr><td>$args</td><td>所有请求参数</td></tr><tr><td>$query_string</td><td>$args的别名</td></tr><tr><td>$content_length</td><td>请求头Content-Length的值</td></tr><tr><td>$content_type</td><td>请求头Content-Type的值</td></tr><tr><td>$host</td><td>如果当前有Host，则为请求头Host的值；如果没有这个头，那么该值等于匹配该请求的server_name的值</td></tr><tr><td>$remote_addr</td><td>客户端的IP地址</td></tr><tr><td>$request</td><td>完整的请求，从客户端收到，包括Http请求方法、URI、Http协议、头、请求体</td></tr><tr><td>$request_uri</td><td>完整请求的URI，从客户端来的请求，包括参数</td></tr><tr><td>$scheme</td><td>当前请求的协议</td></tr><tr><td>$uri</td><td>当前请求的标准化URI</td></tr></tbody></table><h3 id="反向代理"><a href="#反向代理" class="headerlink" title="反向代理"></a>反向代理</h3><p>反向代理是一个Web服务器，它接受客户端的连接请求，然后将请求转发给上游服务器，并将从服务器得到的结果返回给连接的客户端。下面简单的反向代理的例子：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;  </span><br><span class="line">  <span class="attribute">listen</span>       <span class="number">80</span>;                                                        </span><br><span class="line">  <span class="attribute">server_name</span>  localhost;                                              </span><br><span class="line">  <span class="attribute">client_max_body_size</span> <span class="number">1024M</span>;  <span class="comment"># 允许客户端请求的最大单文件字节数</span></span><br><span class="line"></span><br><span class="line">  <span class="attribute">location</span> / &#123;</span><br><span class="line">    <span class="attribute">proxy_pass</span>                         http://localhost:8080;</span><br><span class="line">    <span class="attribute">proxy_set_header</span> Host              <span class="variable">$host</span>:<span class="variable">$server_port</span>;</span><br><span class="line">    <span class="attribute">proxy_set_header</span> X-Forwarded-For   <span class="variable">$remote_addr</span>; <span class="comment"># HTTP的请求端真实的IP</span></span><br><span class="line">    <span class="attribute">proxy_set_header</span> X-Forwarded-Proto <span class="variable">$scheme</span>;      <span class="comment"># 为了正确地识别实际用户发出的协议是 http 还是 https</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>复杂的配置: gitlab.com.conf。</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="comment">#侦听的80端口</span></span><br><span class="line">    <span class="attribute">listen</span>       <span class="number">80</span>;</span><br><span class="line">    <span class="attribute">server_name</span>  git.example.cn;</span><br><span class="line">    <span class="attribute">location</span> / &#123;</span><br><span class="line">        <span class="attribute">proxy_pass</span>   http://localhost:3000;</span><br><span class="line">        <span class="comment">#以下是一些反向代理的配置可删除</span></span><br><span class="line">        <span class="attribute">proxy_redirect</span>             <span class="literal">off</span>;</span><br><span class="line">        <span class="comment">#后端的Web服务器可以通过X-Forwarded-For获取用户真实IP</span></span><br><span class="line">        <span class="attribute">proxy_set_header</span>           Host <span class="variable">$host</span>;</span><br><span class="line">        <span class="attribute">client_max_body_size</span>       <span class="number">10m</span>; <span class="comment">#允许客户端请求的最大单文件字节数</span></span><br><span class="line">        <span class="attribute">client_body_buffer_size</span>    <span class="number">128k</span>; <span class="comment">#缓冲区代理缓冲用户端请求的最大字节数</span></span><br><span class="line">        <span class="attribute">proxy_connect_timeout</span>      <span class="number">300</span>; <span class="comment">#nginx跟后端服务器连接超时时间(代理连接超时)</span></span><br><span class="line">        <span class="attribute">proxy_send_timeout</span>         <span class="number">300</span>; <span class="comment">#后端服务器数据回传时间(代理发送超时)</span></span><br><span class="line">        <span class="attribute">proxy_read_timeout</span>         <span class="number">300</span>; <span class="comment">#连接成功后，后端服务器响应时间(代理接收超时)</span></span><br><span class="line">        <span class="attribute">proxy_buffer_size</span>          <span class="number">4k</span>; <span class="comment">#设置代理服务器（nginx）保存用户头信息的缓冲区大小</span></span><br><span class="line">        <span class="attribute">proxy_buffers</span>              <span class="number">4</span> <span class="number">32k</span>; <span class="comment">#proxy_buffers缓冲区，网页平均在32k以下的话，这样设置</span></span><br><span class="line">        <span class="attribute">proxy_busy_buffers_size</span>    <span class="number">64k</span>; <span class="comment">#高负荷下缓冲大小（proxy_buffers*2）</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代理到上游服务器的配置中，最重要的是proxy_pass指令。以下是代理模块中的一些常用指令：</p><table><thead><tr><th>指令</th><th>说明</th></tr></thead><tbody><tr><td>proxy_connect_timeout</td><td>Nginx从接受请求至连接到上游服务器的最长等待时间</td></tr><tr><td>proxy_send_timeout</td><td>后端服务器数据回传时间(代理发送超时)</td></tr><tr><td>proxy_read_timeout</td><td>连接成功后，后端服务器响应时间(代理接收超时)</td></tr><tr><td>proxy_cookie_domain</td><td>替代从上游服务器来的Set-Cookie头的domain属性</td></tr><tr><td>proxy_cookie_path</td><td>替代从上游服务器来的Set-Cookie头的path属性</td></tr><tr><td>proxy_buffer_size</td><td>设置代理服务器（nginx）保存用户头信息的缓冲区大小</td></tr><tr><td>proxy_buffers</td><td>proxy_buffers缓冲区，网页平均在多少k以下</td></tr><tr><td>proxy_set_header</td><td>重写发送到上游服务器头的内容，也可以通过将某个头部的值设置为空字符串，而不发送某个头部的方法实现</td></tr><tr><td>proxy_ignore_headers</td><td>这个指令禁止处理来自代理服务器的应答。</td></tr><tr><td>proxy_intercept_errors</td><td>使nginx阻止HTTP应答代码为400或者更高的应答。</td></tr></tbody></table><h3 id="负载均衡"><a href="#负载均衡" class="headerlink" title="负载均衡"></a>负载均衡</h3><p>upstream指令启用一个新的配置区段，在该区段定义一组上游服务器。这些服务器可能被设置不同的权重，也可能出于对服务器进行维护，标记为down。</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">upstream</span> gitlab &#123;</span><br><span class="line">    ip_hash;</span><br><span class="line">    <span class="comment"># upstream的负载均衡，weight是权重，可以根据机器配置定义权重。weigth参数表示权值，权值越高被分配到的几率越大。</span></span><br><span class="line">    <span class="attribute">server</span> <span class="number">192.168.122.11:8081</span> ;</span><br><span class="line">    <span class="attribute">server</span> <span class="number">127.0.0.1:82</span> weight=<span class="number">3</span>;</span><br><span class="line">    <span class="attribute">server</span> <span class="number">127.0.0.1:83</span> weight=<span class="number">3</span> down;</span><br><span class="line">    server 127.0.0.1:84 weight=3; max_fails=3  fail_timeout=20s;</span><br><span class="line">    server 127.0.0.1:85 weight=4;;</span><br><span class="line">    <span class="attribute">keepalive</span> <span class="number">32</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="comment">#侦听的80端口</span></span><br><span class="line">    <span class="attribute">listen</span>       <span class="number">80</span>;</span><br><span class="line">    <span class="attribute">server_name</span>  git.example.cn;</span><br><span class="line">    <span class="attribute">location</span> / &#123;</span><br><span class="line">        <span class="attribute">proxy_pass</span>   http://gitlab;    <span class="comment">#在这里设置一个代理，和upstream的名字一样</span></span><br><span class="line">        <span class="comment">#以下是一些反向代理的配置可删除</span></span><br><span class="line">        <span class="attribute">proxy_redirect</span>             <span class="literal">off</span>;</span><br><span class="line">        <span class="comment">#后端的Web服务器可以通过X-Forwarded-For获取用户真实IP</span></span><br><span class="line">        <span class="attribute">proxy_set_header</span>           Host <span class="variable">$host</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span>           X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span>           X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">        <span class="attribute">client_max_body_size</span>       <span class="number">10m</span>;  <span class="comment">#允许客户端请求的最大单文件字节数</span></span><br><span class="line">        <span class="attribute">client_body_buffer_size</span>    <span class="number">128k</span>; <span class="comment">#缓冲区代理缓冲用户端请求的最大字节数</span></span><br><span class="line">        <span class="attribute">proxy_connect_timeout</span>      <span class="number">300</span>;  <span class="comment">#nginx跟后端服务器连接超时时间(代理连接超时)</span></span><br><span class="line">        <span class="attribute">proxy_send_timeout</span>         <span class="number">300</span>;  <span class="comment">#后端服务器数据回传时间(代理发送超时)</span></span><br><span class="line">        <span class="attribute">proxy_read_timeout</span>         <span class="number">300</span>;  <span class="comment">#连接成功后，后端服务器响应时间(代理接收超时)</span></span><br><span class="line">        <span class="attribute">proxy_buffer_size</span>          <span class="number">4k</span>; <span class="comment">#设置代理服务器（nginx）保存用户头信息的缓冲区大小</span></span><br><span class="line">        <span class="attribute">proxy_buffers</span>              <span class="number">4</span> <span class="number">32k</span>;<span class="comment"># 缓冲区，网页平均在32k以下的话，这样设置</span></span><br><span class="line">        <span class="attribute">proxy_busy_buffers_size</span>    <span class="number">64k</span>; <span class="comment">#高负荷下缓冲大小（proxy_buffers*2）</span></span><br><span class="line">        <span class="attribute">proxy_temp_file_write_size</span> <span class="number">64k</span>; <span class="comment">#设定缓存文件夹大小，大于这个值，将从upstream服务器传</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>每个请求按时间顺序逐一分配到不同的后端服务器，如果后端服务器down掉，能自动剔除。</p><p><strong>负载均衡：</strong></p><p>upstream模块能够使用3种负载均衡算法：轮询、IP哈希、最少连接数。</p><p><strong>轮询：</strong> 默认情况下使用轮询算法，不需要配置指令来激活它，它是基于在队列中谁是下一个的原理确保访问均匀地分布到每个上游服务器；<br><strong>IP哈希：</strong> 通过ip_hash指令来激活，Nginx通过IPv4地址的前3个字节或者整个IPv6地址作为哈希键来实现，同一个IP地址总是能被映射到同一个上游服务器；<br><strong>最少连接数：</strong> 通过least_conn指令来激活，该算法通过选择一个活跃数最少的上游服务器进行连接。如果上游服务器处理能力不同，可以通过给server配置weight权重来说明，该算法将考虑到不同服务器的加权最少连接数。</p><h4 id="RR"><a href="#RR" class="headerlink" title="RR"></a>RR</h4><p><strong>简单配置</strong> ，这里我配置了2台服务器，当然实际上是一台，只是端口不一样而已，而8081的服务器是不存在的，也就是说访问不到，但是我们访问 <code>http://localhost</code> 的时候，也不会有问题，会默认跳转到<code>http://localhost:8080</code>具体是因为Nginx会自动判断服务器的状态，如果服务器处于不能访问（服务器挂了），就不会跳转到这台服务器，所以也避免了一台服务器挂了影响使用的情况，由于Nginx默认是RR策略，所以我们不需要其他更多的设置</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">upstream</span> test &#123;</span><br><span class="line">    <span class="attribute">server</span> localhost:<span class="number">8080</span>;</span><br><span class="line">    <span class="attribute">server</span> localhost:<span class="number">8081</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span>       <span class="number">81</span>;</span><br><span class="line">    <span class="attribute">server_name</span>  localhost;</span><br><span class="line">    <span class="attribute">client_max_body_size</span> <span class="number">1024M</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="attribute">location</span> / &#123;</span><br><span class="line">        <span class="attribute">proxy_pass</span> http://test;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>:<span class="variable">$server_port</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>负载均衡的核心代码为</strong> </p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">upstream</span> test &#123;</span><br><span class="line">    <span class="attribute">server</span> localhost:<span class="number">8080</span>;</span><br><span class="line">    <span class="attribute">server</span> localhost:<span class="number">8081</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="权重"><a href="#权重" class="headerlink" title="权重"></a>权重</h4><p>指定轮询几率，weight和访问比率成正比，用于后端服务器性能不均的情况。 例如</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">upstream</span> test &#123;</span><br><span class="line">    <span class="attribute">server</span> localhost:<span class="number">8080</span> weight=<span class="number">9</span>;</span><br><span class="line">    <span class="attribute">server</span> localhost:<span class="number">8081</span> weight=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>那么10次一般只会有1次会访问到8081，而有9次会访问到8080</p><h4 id="ip-hash"><a href="#ip-hash" class="headerlink" title="ip_hash"></a>ip_hash</h4><p>上面的2种方式都有一个问题，那就是下一个请求来的时候请求可能分发到另外一个服务器，当我们的程序不是无状态的时候（采用了session保存数据），这时候就有一个很大的很问题了，比如把登录信息保存到了session中，那么跳转到另外一台服务器的时候就需要重新登录了，所以很多时候我们需要一个客户只访问一个服务器，那么就需要用iphash了，iphash的每个请求按访问ip的hash结果分配，这样每个访客固定访问一个后端服务器，可以解决session的问题。</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">upstream</span> test &#123;</span><br><span class="line">    ip_hash;</span><br><span class="line">    <span class="attribute">server</span> localhost:<span class="number">8080</span>;</span><br><span class="line">    <span class="attribute">server</span> localhost:<span class="number">8081</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="fair"><a href="#fair" class="headerlink" title="fair"></a>fair</h4><p>这是个第三方模块，按后端服务器的响应时间来分配请求，响应时间短的优先分配。</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">upstream</span> backend &#123;</span><br><span class="line">    fair;</span><br><span class="line">    <span class="attribute">server</span> localhost:<span class="number">8080</span>;</span><br><span class="line">    <span class="attribute">server</span> localhost:<span class="number">8081</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="url-hash"><a href="#url-hash" class="headerlink" title="url_hash"></a>url_hash</h4><p>这是个第三方模块，按访问url的hash结果来分配请求，使每个url定向到同一个后端服务器，后端服务器为缓存时比较有效。 在upstream中加入hash语句，server语句中不能写入weight等其他的参数，hash_method是使用的hash算法</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">upstream</span> backend &#123;</span><br><span class="line">    <span class="attribute">hash</span> <span class="variable">$request_uri</span>;</span><br><span class="line">    <span class="attribute">hash_method</span> crc32;</span><br><span class="line">    <span class="attribute">server</span> localhost:<span class="number">8080</span>;</span><br><span class="line">    <span class="attribute">server</span> localhost:<span class="number">8081</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上5种负载均衡各自适用不同情况下使用，所以可以根据实际情况选择使用哪种策略模式，不过fair和url_hash需要安装第三方模块才能使用</p><p><strong>server指令可选参数：</strong></p><ol><li>weight：设置一个服务器的访问权重，数值越高，收到的请求也越多；</li><li>fail_timeout：在这个指定的时间内服务器必须提供响应，如果在这个时间内没有收到响应，那么服务器将会被标记为down状态；</li><li>max_fails：设置在fail_timeout时间之内尝试对一个服务器连接的最大次数，如果超过这个次数，那么服务器将会被标记为down;</li><li>down：标记一个服务器不再接受任何请求；</li><li>backup：一旦其他服务器宕机，那么有该标记的机器将会接收请求。</li></ol><p><strong>keepalive指令：</strong></p><p>Nginx服务器将会为每一个worker进行保持同上游服务器的连接。</p><h3 id="屏蔽ip"><a href="#屏蔽ip" class="headerlink" title="屏蔽ip"></a>屏蔽ip</h3><p>在nginx的配置文件<code>nginx.conf</code>中加入如下配置，可以放到http, server, location, limit_except语句块，需要注意相对路径，本例当中<code>nginx.conf</code>，<code>blocksip.conf</code>在同一个目录中。</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">include</span> blockip.conf;</span><br></pre></td></tr></table></figure><p>在blockip.conf里面输入内容，如：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">deny</span> <span class="number">165.91.122.67</span>;</span><br><span class="line"></span><br><span class="line"><span class="attribute">deny</span> IP;   <span class="comment"># 屏蔽单个ip访问</span></span><br><span class="line"><span class="attribute">allow</span> IP;  <span class="comment"># 允许单个ip访问</span></span><br><span class="line"><span class="attribute">deny</span> all;  <span class="comment"># 屏蔽所有ip访问</span></span><br><span class="line"><span class="attribute">allow</span> all; <span class="comment"># 允许所有ip访问</span></span><br><span class="line"><span class="attribute">deny</span> <span class="number">123.0.0.0</span>/<span class="number">8</span>   <span class="comment"># 屏蔽整个段即从123.0.0.1到123.255.255.254访问的命令</span></span><br><span class="line">deny <span class="number">124.45.0.0</span>/<span class="number">16</span> <span class="comment"># 屏蔽IP段即从123.45.0.1到123.45.255.254访问的命令</span></span><br><span class="line">deny <span class="number">123.45.6.0</span>/<span class="number">24</span> <span class="comment"># 屏蔽IP段即从123.45.6.1到123.45.6.254访问的命令</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果你想实现这样的应用，除了几个IP外，其他全部拒绝</span></span><br><span class="line">allow <span class="number">1.1.1.1</span>; </span><br><span class="line"><span class="attribute">allow</span> <span class="number">1.1.1.2</span>;</span><br><span class="line"><span class="attribute">deny</span> all;</span><br></pre></td></tr></table></figure><h2 id="第三方模块安装方法"><a href="#第三方模块安装方法" class="headerlink" title="第三方模块安装方法"></a>第三方模块安装方法</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./configure --prefix=/你的安装目录  --add-module=/第三方模块目录</span><br></pre></td></tr></table></figure><h2 id="重定向"><a href="#重定向" class="headerlink" title="重定向"></a>重定向</h2><ul><li><code>permanent</code> 永久性重定向。请求日志中的状态码为301</li><li><code>redirect</code> 临时重定向。请求日志中的状态码为302</li></ul><h3 id="重定向整个网站"><a href="#重定向整个网站" class="headerlink" title="重定向整个网站"></a>重定向整个网站</h3><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">server_name</span> old-site.com</span><br><span class="line">    return <span class="number">301</span> <span class="variable">$scheme</span>://new-site.com<span class="variable">$request_uri</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="重定向单页"><a href="#重定向单页" class="headerlink" title="重定向单页"></a>重定向单页</h3><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">location</span> = /oldpage.html &#123;</span><br><span class="line">        <span class="attribute">return</span> <span class="number">301</span> http://example.org/newpage.html;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="重定向整个子路径"><a href="#重定向整个子路径" class="headerlink" title="重定向整个子路径"></a>重定向整个子路径</h3><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">location</span> /old-site &#123;</span><br><span class="line">    <span class="attribute">rewrite</span><span class="regexp"> ^/old-site/(.*)</span> http://example.org/new-site/<span class="variable">$1</span> <span class="literal">permanent</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="性能"><a href="#性能" class="headerlink" title="性能"></a>性能</h2><h3 id="内容缓存"><a href="#内容缓存" class="headerlink" title="内容缓存"></a>内容缓存</h3><p>允许浏览器基本上永久地缓存静态内容。 Nginx将为您设置Expires和Cache-Control头信息。</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">location</span> /static &#123;</span><br><span class="line">    <span class="attribute">root</span> /data;</span><br><span class="line">    <span class="attribute">expires</span> max;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果要求浏览器永远不会缓存响应（例如用于跟踪请求），请使用-1。</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">location</span> = /empty.gif &#123;</span><br><span class="line">    empty_gif;</span><br><span class="line">    <span class="attribute">expires</span> -<span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Gzip压缩"><a href="#Gzip压缩" class="headerlink" title="Gzip压缩"></a>Gzip压缩</h3><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">gzip</span>  <span class="literal">on</span>;</span><br><span class="line"><span class="attribute">gzip_buffers</span> <span class="number">16</span> <span class="number">8k</span>;</span><br><span class="line"><span class="attribute">gzip_comp_level</span> <span class="number">6</span>;</span><br><span class="line"><span class="attribute">gzip_http_version</span> <span class="number">1</span>.<span class="number">1</span>;</span><br><span class="line"><span class="attribute">gzip_min_length</span> <span class="number">256</span>;</span><br><span class="line"><span class="attribute">gzip_proxied</span> any;</span><br><span class="line"><span class="attribute">gzip_vary</span> <span class="literal">on</span>;</span><br><span class="line">gzip_types</span><br><span class="line">    text/xml application/xml application/atom+xml application/rss+xml application/xhtml+xml image/svg+xml</span><br><span class="line">    text/javascript application/javascript application/x-javascript</span><br><span class="line">    text/x-json application/json application/x-web-app-manifest+json</span><br><span class="line">    text/css text/plain text/x-component</span><br><span class="line">    font/opentype application/x-font-ttf application/vnd.ms-fontobject</span><br><span class="line">    image/x-icon;</span><br><span class="line"><span class="attribute">gzip_disable</span>  <span class="string">"msie6"</span>;</span><br></pre></td></tr></table></figure><h3 id="打开文件缓存"><a href="#打开文件缓存" class="headerlink" title="打开文件缓存"></a>打开文件缓存</h3><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">open_file_cache</span> max=<span class="number">1000</span> inactive=<span class="number">20s</span>;</span><br><span class="line"><span class="attribute">open_file_cache_valid</span> <span class="number">30s</span>;</span><br><span class="line"><span class="attribute">open_file_cache_min_uses</span> <span class="number">2</span>;</span><br><span class="line"><span class="attribute">open_file_cache_errors</span> <span class="literal">on</span>;</span><br></pre></td></tr></table></figure><h3 id="SSL缓存"><a href="#SSL缓存" class="headerlink" title="SSL缓存"></a>SSL缓存</h3><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">ssl_session_cache</span> shared:SSL:<span class="number">10m</span>;</span><br><span class="line"><span class="attribute">ssl_session_timeout</span> <span class="number">10m</span>;</span><br></pre></td></tr></table></figure><h3 id="上游Keepalive"><a href="#上游Keepalive" class="headerlink" title="上游Keepalive"></a>上游Keepalive</h3><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">upstream</span> backend &#123;</span><br><span class="line">    <span class="attribute">server</span> <span class="number">127.0.0.1:8080</span>;</span><br><span class="line">    <span class="attribute">keepalive</span> <span class="number">32</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="attribute">location</span> /api/ &#123;</span><br><span class="line">        <span class="attribute">proxy_pass</span> http://backend;</span><br><span class="line">        <span class="attribute">proxy_http_version</span> <span class="number">1</span>.<span class="number">1</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> Connection <span class="string">""</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="监控"><a href="#监控" class="headerlink" title="监控"></a>监控</h3><p>使用<code>ngxtop</code>实时解析nginx访问日志，并且将处理结果输出到终端，功能类似于系统命令top。所有示例都读取nginx配置文件的访问日志位置和格式。如果要指定访问日志文件和/或日志格式，请使用-f和-a选项。</p><p>注意：在nginx配置中<code>/usr/local/nginx/conf/nginx.conf</code>日志文件必须是绝对路径。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装 ngxtop</span></span><br><span class="line">pip install ngxtop</span><br><span class="line"></span><br><span class="line"><span class="comment"># 实时状态</span></span><br><span class="line">ngxtop</span><br><span class="line"><span class="comment"># 状态为404的前10个请求的路径：</span></span><br><span class="line">ngxtop top request_path --filter <span class="string">'status == 404'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 发送总字节数最多的前10个请求</span></span><br><span class="line">ngxtop --order-by <span class="string">'avg(bytes_sent) * count'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 排名前十位的IP，例如，谁攻击你最多</span></span><br><span class="line">ngxtop --group-by remote_addr</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打印具有4xx或5xx状态的请求，以及status和http referer</span></span><br><span class="line">ngxtop -i <span class="string">'status &gt;= 400'</span> <span class="built_in">print</span> request status http_referer</span><br><span class="line"></span><br><span class="line"><span class="comment"># 由200个请求路径响应发送的平均正文字节以'foo'开始：</span></span><br><span class="line">ngxtop avg bytes_sent --filter <span class="string">'status == 200 and request_path.startswith("foo")'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用“common”日志格式从远程机器分析apache访问日志</span></span><br><span class="line">ssh remote tail -f /var/<span class="built_in">log</span>/apache2/access.log | ngxtop -f common</span><br></pre></td></tr></table></figure><h2 id="常见使用场景"><a href="#常见使用场景" class="headerlink" title="常见使用场景"></a>常见使用场景</h2><h3 id="跨域问题"><a href="#跨域问题" class="headerlink" title="跨域问题"></a>跨域问题</h3><p>在工作中，有时候会遇到一些接口不支持跨域，这时候可以简单的添加add_headers来支持cors跨域。配置如下：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">  <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">  <span class="attribute">server_name</span> api.xxx.com;</span><br><span class="line">    </span><br><span class="line">  <span class="attribute">add_header</span> <span class="string">'Access-Control-Allow-Origin'</span> <span class="string">'*'</span>;</span><br><span class="line">  <span class="attribute">add_header</span> <span class="string">'Access-Control-Allow-Credentials'</span> <span class="string">'true'</span>;</span><br><span class="line">  <span class="attribute">add_header</span> <span class="string">'Access-Control-Allow-Methods'</span> <span class="string">'GET,POST,HEAD'</span>;</span><br><span class="line"></span><br><span class="line">  <span class="attribute">location</span> / &#123;</span><br><span class="line">    <span class="attribute">proxy_pass</span> http://127.0.0.1:3000;</span><br><span class="line">    <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">    <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">    <span class="attribute">proxy_set_header</span> Host  <span class="variable">$http_host</span>;    </span><br><span class="line">  &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面更改头信息，还有一种，使用 <a href="http://nginx.org/en/docs/http/ngx_http_rewrite_module.html" target="_blank" rel="noopener">rewrite</a> 指令重定向URI来解决跨域问题。</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">upstream</span> test &#123;</span><br><span class="line">  <span class="attribute">server</span> <span class="number">127.0.0.1:8080</span>;</span><br><span class="line">  <span class="attribute">server</span> localhost:<span class="number">8081</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">  <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">  <span class="attribute">server_name</span> api.xxx.com;</span><br><span class="line">  <span class="attribute">location</span> / &#123; </span><br><span class="line">    <span class="attribute">root</span>  html;                   <span class="comment">#去请求../html文件夹里的文件</span></span><br><span class="line">    <span class="attribute">index</span>  index.html index.htm;  <span class="comment">#首页响应地址</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment"># 用于拦截请求，匹配任何以 /api/开头的地址，</span></span><br><span class="line">  <span class="comment"># 匹配符合以后，停止往下搜索正则。</span></span><br><span class="line">  <span class="attribute">location</span><span class="regexp"> ^~/api/</span>&#123; </span><br><span class="line">    <span class="comment"># 代表重写拦截进来的请求，并且只能对域名后边的除去传递的参数外的字符串起作用，</span></span><br><span class="line">    <span class="comment"># 例如www.a.com/proxy/api/msg?meth=1&amp;par=2重写，只对/proxy/api/msg重写。</span></span><br><span class="line">    <span class="comment"># rewrite后面的参数是一个简单的正则 ^/api/(.*)$，</span></span><br><span class="line">    <span class="comment"># $1代表正则中的第一个()，$2代表第二个()的值，以此类推。</span></span><br><span class="line">    <span class="attribute">rewrite</span><span class="regexp"> ^/api/(.*)$</span> /<span class="variable">$1</span> <span class="literal">break</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 把请求代理到其他主机 </span></span><br><span class="line">    <span class="comment"># 其中 http://www.b.com/ 写法和 http://www.b.com写法的区别如下</span></span><br><span class="line">    <span class="comment"># 如果你的请求地址是他 http://server/html/test.jsp</span></span><br><span class="line">    <span class="comment"># 配置一： http://www.b.com/ 后面有“/” </span></span><br><span class="line">    <span class="comment">#         将反向代理成 http://www.b.com/html/test.jsp 访问</span></span><br><span class="line">    <span class="comment"># 配置一： http://www.b.com 后面没有有“/” </span></span><br><span class="line">    <span class="comment">#         将反向代理成 http://www.b.com/test.jsp 访问</span></span><br><span class="line">    <span class="attribute">proxy_pass</span> http://test;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 如果 proxy_pass  URL 是 http://a.xx.com/platform/ 这种情况</span></span><br><span class="line">    <span class="comment"># proxy_cookie_path应该设置成 /platform/ / (注意两个斜杠之间有空格)。</span></span><br><span class="line">    <span class="attribute">proxy_cookie_path</span> /platfrom/ /;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_pass_header</span></span><br><span class="line">    <span class="comment"># 设置 Cookie 头通过</span></span><br><span class="line">    <span class="attribute">proxy_pass_header</span> Set-Cookie;</span><br><span class="line">  &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="跳转到带www的域上面"><a href="#跳转到带www的域上面" class="headerlink" title="跳转到带www的域上面"></a>跳转到带www的域上面</h3><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">    <span class="comment"># 配置正常的带www的域名</span></span><br><span class="line">    <span class="attribute">server_name</span> www.wangchujiang.com;</span><br><span class="line">    <span class="attribute">root</span> /home/www/wabg/download;</span><br><span class="line">    <span class="attribute">location</span> / &#123;</span><br><span class="line">        <span class="attribute">try_files</span> <span class="variable">$uri</span> <span class="variable">$uri</span>/ /index.html =<span class="number">404</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="comment"># 这个要放到下面，</span></span><br><span class="line">    <span class="comment"># 将不带www的 wangchujiang.com 永久性重定向到  https://www.wangchujiang.com</span></span><br><span class="line">    <span class="attribute">server_name</span> wangchujiang.com;</span><br><span class="line">    <span class="attribute">rewrite</span><span class="regexp"> ^(.*)</span> https://www.wangchujiang.com<span class="variable">$1</span> <span class="literal">permanent</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="代理转发"><a href="#代理转发" class="headerlink" title="代理转发"></a>代理转发</h3><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">upstream</span> server-api&#123;</span><br><span class="line">    <span class="comment"># api 代理服务地址</span></span><br><span class="line">    <span class="attribute">server</span> <span class="number">127.0.0.1:3110</span>;    </span><br><span class="line">&#125;</span><br><span class="line"><span class="attribute">upstream</span> server-resource&#123;</span><br><span class="line">    <span class="comment"># 静态资源 代理服务地址</span></span><br><span class="line">    <span class="attribute">server</span> <span class="number">127.0.0.1:3120</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span>       <span class="number">3111</span>;</span><br><span class="line">    <span class="attribute">server_name</span>  localhost;      <span class="comment"># 这里指定域名</span></span><br><span class="line">    <span class="attribute">root</span> /home/www/server-statics;</span><br><span class="line">    <span class="comment"># 匹配 api 路由的反向代理到API服务</span></span><br><span class="line">    <span class="attribute">location</span><span class="regexp"> ^~/api/</span> &#123;</span><br><span class="line">        <span class="attribute">rewrite</span><span class="regexp"> ^/(.*)$</span> /<span class="variable">$1</span> <span class="literal">break</span>;</span><br><span class="line">        <span class="attribute">proxy_pass</span> http://server-api;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"># 假设这里验证码也在API服务中</span></span><br><span class="line">    <span class="attribute">location</span><span class="regexp"> ^~/captcha</span> &#123;</span><br><span class="line">        <span class="attribute">rewrite</span><span class="regexp"> ^/(.*)$</span> /<span class="variable">$1</span> <span class="literal">break</span>;</span><br><span class="line">        <span class="attribute">proxy_pass</span> http://server-api;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"># 假设你的图片资源全部在另外一个服务上面</span></span><br><span class="line">    <span class="attribute">location</span><span class="regexp"> ^~/img/</span> &#123;</span><br><span class="line">        <span class="attribute">rewrite</span><span class="regexp"> ^/(.*)$</span> /<span class="variable">$1</span> <span class="literal">break</span>;</span><br><span class="line">        <span class="attribute">proxy_pass</span> http://server-resource;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"># 路由在前端，后端没有真实路由，在路由不存在的 404状态的页面返回 /index.html</span></span><br><span class="line">    <span class="comment"># 这个方式使用场景，你在写React或者Vue项目的时候，没有真实路由</span></span><br><span class="line">    <span class="attribute">location</span> / &#123;</span><br><span class="line">        <span class="attribute">try_files</span> <span class="variable">$uri</span> <span class="variable">$uri</span>/ /index.html =<span class="number">404</span>;</span><br><span class="line">        <span class="comment">#                               ^ 空格很重要</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="代理转发连接替换"><a href="#代理转发连接替换" class="headerlink" title="代理转发连接替换"></a>代理转发连接替换</h3><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">location</span><span class="regexp"> ^~/api/upload</span> &#123;</span><br><span class="line">    <span class="attribute">rewrite</span><span class="regexp"> ^/(.*)$</span> /wfs/v1/upload <span class="literal">break</span>;</span><br><span class="line">    <span class="attribute">proxy_pass</span> http://wfs-api;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="ssl配置"><a href="#ssl配置" class="headerlink" title="ssl配置"></a>ssl配置</h3><p>超文本传输安全协议（缩写：HTTPS，英语：Hypertext Transfer Protocol Secure）是超文本传输协议和SSL/TLS的组合，用以提供加密通讯及对网络服务器身份的鉴定。HTTPS连接经常被用于万维网上的交易支付和企业信息系统中敏感信息的传输。HTTPS不应与在RFC 2660中定义的安全超文本传输协议（S-HTTP）相混。HTTPS 目前已经是所有注重隐私和安全的网站的首选，随着技术的不断发展，HTTPS 网站已不再是大型网站的专利，所有普通的个人站长和博客均可以自己动手搭建一个安全的加密的网站。</p><p>创建SSL证书，如果你购买的证书，就可以直接下载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir /etc/nginx/ssl</span><br><span class="line"><span class="comment"># 创建了有效期100年，加密强度为RSA2048的SSL密钥key和X509证书文件。</span></span><br><span class="line">sudo openssl req -x509 -nodes -days 36500 -newkey rsa:2048 -keyout /etc/nginx/ssl/nginx.key -out /etc/nginx/ssl/nginx.crt</span><br><span class="line"><span class="comment"># 上面命令，会有下面需要填写内容</span></span><br><span class="line">Country Name (2 letter code) [AU]:US</span><br><span class="line">State or Province Name (full name) [Some-State]:New York</span><br><span class="line">Locality Name (eg, city) []:New York City</span><br><span class="line">Organization Name (eg, company) [Internet Widgits Pty Ltd]:Bouncy Castles, Inc.</span><br><span class="line">Organizational Unit Name (eg, section) []:Ministry of Water Slides</span><br><span class="line">Common Name (e.g. server FQDN or YOUR name) []:your_domain.com</span><br><span class="line">Email Address []:admin@your_domain.com</span><br></pre></td></tr></table></figure><p>创建自签证书</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">首先，创建证书和私钥的目录</span><br><span class="line"><span class="comment"># mkdir -p /etc/nginx/cert</span></span><br><span class="line"><span class="comment"># cd /etc/nginx/cert</span></span><br><span class="line">创建服务器私钥，命令会让你输入一个口令：</span><br><span class="line"><span class="comment"># openssl genrsa -des3 -out nginx.key 2048</span></span><br><span class="line">创建签名请求的证书（CSR）：</span><br><span class="line"><span class="comment"># openssl req -new -key nginx.key -out nginx.csr</span></span><br><span class="line">在加载SSL支持的Nginx并使用上述私钥时除去必须的口令：</span><br><span class="line"><span class="comment"># cp nginx.key nginx.key.org</span></span><br><span class="line"><span class="comment"># openssl rsa -in nginx.key.org -out nginx.key</span></span><br><span class="line">最后标记证书使用上述私钥和CSR：</span><br><span class="line"><span class="comment"># openssl x509 -req -days 365 -in nginx.csr -signkey nginx.key -out nginx.crt</span></span><br></pre></td></tr></table></figure><p>查看目前nginx编译选项</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sbin/nginx -V</span><br></pre></td></tr></table></figure><p>输出下面内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">nginx version: nginx/1.7.8</span><br><span class="line">built by gcc 4.4.7 20120313 (Red Hat 4.4.7-4) (GCC)</span><br><span class="line">TLS SNI support enabled</span><br><span class="line">configure arguments: --prefix=/usr/local/nginx-1.7.8 --with-http_ssl_module --with-http_spdy_module --with-http_stub_status_module --with-pcre</span><br></pre></td></tr></table></figure><p>如果依赖的模块不存在，可以进入安装目录，输入下面命令重新编译安装。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./configure --prefix=/usr/<span class="built_in">local</span>/nginx --with-http_stub_status_module --with-http_ssl_module</span><br></pre></td></tr></table></figure><p>运行完成之后还需要<code>make</code> (不用make install)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 备份nginx的二进制文件</span></span><br><span class="line">cp -rf /usr/<span class="built_in">local</span>/nginx/sbin/nginx　 /usr/<span class="built_in">local</span>/nginx/sbin/nginx.bak</span><br><span class="line"><span class="comment"># 覆盖nginx的二进制文件</span></span><br><span class="line">cp -rf objs/nginx   /usr/<span class="built_in">local</span>/nginx/sbin/</span><br></pre></td></tr></table></figure><p>HTTPS server</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span>       <span class="number">443</span> ssl;</span><br><span class="line">    <span class="attribute">server_name</span>  localhost;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">ssl_certificate</span> /etc/nginx/ssl/nginx.crt;</span><br><span class="line">    <span class="attribute">ssl_certificate_key</span> /etc/nginx/ssl/nginx.key;</span><br><span class="line">    <span class="comment"># 禁止在header中出现服务器版本，防止黑客利用版本漏洞攻击</span></span><br><span class="line">    <span class="attribute">server_tokens</span> <span class="literal">off</span>;</span><br><span class="line">    <span class="comment"># 设置ssl/tls会话缓存的类型和大小。如果设置了这个参数一般是shared，buildin可能会参数内存碎片，默认是none，和off差不多，停用缓存。如shared:SSL:10m表示我所有的nginx工作进程共享ssl会话缓存，官网介绍说1M可以存放约4000个sessions。 </span></span><br><span class="line">    <span class="attribute">ssl_session_cache</span>    shared:SSL:<span class="number">1m</span>; </span><br><span class="line"></span><br><span class="line">    <span class="comment"># 客户端可以重用会话缓存中ssl参数的过期时间，内网系统默认5分钟太短了，可以设成30m即30分钟甚至4h。</span></span><br><span class="line">    <span class="attribute">ssl_session_timeout</span>  <span class="number">5m</span>; </span><br><span class="line"></span><br><span class="line">    <span class="comment"># 选择加密套件，不同的浏览器所支持的套件（和顺序）可能会不同。</span></span><br><span class="line">    <span class="comment"># 这里指定的是OpenSSL库能够识别的写法，你可以通过 openssl -v cipher 'RC4:HIGH:!aNULL:!MD5'（后面是你所指定的套件加密算法） 来看所支持算法。</span></span><br><span class="line">    <span class="attribute">ssl_ciphers</span>  HIGH:!aNULL:!MD5;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 设置协商加密算法时，优先使用我们服务端的加密套件，而不是客户端浏览器的加密套件。</span></span><br><span class="line">    <span class="attribute">ssl_prefer_server_ciphers</span>  <span class="literal">on</span>;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">location</span> / &#123;</span><br><span class="line">        <span class="attribute">root</span>   html;</span><br><span class="line">        <span class="attribute">index</span>  index.html index.htm;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="强制将http重定向到https"><a href="#强制将http重定向到https" class="headerlink" title="强制将http重定向到https"></a>强制将http重定向到https</h3><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span>       <span class="number">80</span>;</span><br><span class="line">    <span class="attribute">server_name</span>  example.com;</span><br><span class="line">    <span class="attribute">rewrite</span><span class="regexp"> ^</span> https://<span class="variable">$http_host</span><span class="variable">$request_uri</span>? <span class="literal">permanent</span>;    <span class="comment"># 强制将http重定向到https</span></span><br><span class="line">    <span class="comment"># 在错误页面和“服务器”响应头字段中启用或禁用发射nginx版本。 防止黑客利用版本漏洞攻击</span></span><br><span class="line">    <span class="attribute">server_tokens</span> <span class="literal">off</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="两个虚拟主机"><a href="#两个虚拟主机" class="headerlink" title="两个虚拟主机"></a>两个虚拟主机</h3><p>纯静态-html 支持</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">http</span> &#123;</span><br><span class="line">    <span class="section">server</span> &#123;</span><br><span class="line">        <span class="attribute">listen</span>          <span class="number">80</span>;</span><br><span class="line">        <span class="attribute">server_name</span>     www.domain1.com;</span><br><span class="line">        <span class="attribute">access_log</span>      logs/domain1.access.log main;</span><br><span class="line">        <span class="attribute">location</span> / &#123;</span><br><span class="line">            <span class="attribute">index</span> index.html;</span><br><span class="line">            <span class="attribute">root</span>  /var/www/domain1.com/htdocs;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="section">server</span> &#123;</span><br><span class="line">        <span class="attribute">listen</span>          <span class="number">80</span>;</span><br><span class="line">        <span class="attribute">server_name</span>     www.domain2.com;</span><br><span class="line">        <span class="attribute">access_log</span>      logs/domain2.access.log main;</span><br><span class="line">        <span class="attribute">location</span> / &#123;</span><br><span class="line">            <span class="attribute">index</span> index.html;</span><br><span class="line">            <span class="attribute">root</span>  /var/www/domain2.com/htdocs;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="虚拟主机标准配置"><a href="#虚拟主机标准配置" class="headerlink" title="虚拟主机标准配置"></a>虚拟主机标准配置</h3><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">http</span> &#123;</span><br><span class="line">  <span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span>          <span class="number">80</span> default;</span><br><span class="line">    <span class="attribute">server_name</span>     _ *;</span><br><span class="line">    <span class="attribute">access_log</span>      logs/default.access.log main;</span><br><span class="line">    <span class="attribute">location</span> / &#123;</span><br><span class="line">       <span class="attribute">index</span> index.html;</span><br><span class="line">       <span class="attribute">root</span>  /var/www/default/htdocs;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="防盗链"><a href="#防盗链" class="headerlink" title="防盗链"></a>防盗链</h3><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">location</span> <span class="regexp">~* \.(gif|jpg|png|swf|flv)$</span> &#123;</span><br><span class="line">   <span class="attribute">root</span> html</span><br><span class="line">   valid_referers <span class="literal">none</span> <span class="literal">blocked</span> <span class="regexp">*.nginxcn.com</span>;</span><br><span class="line">   <span class="attribute">if</span> (<span class="variable">$invalid_referer</span>) &#123;</span><br><span class="line">     <span class="attribute">rewrite</span><span class="regexp"> ^/</span> www.nginx.cn</span><br><span class="line">     <span class="comment">#return 404;</span></span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="虚拟目录配置"><a href="#虚拟目录配置" class="headerlink" title="虚拟目录配置"></a>虚拟目录配置</h3><p>alias指定的目录是准确的，root是指定目录的上级目录，并且该上级目录要含有location指定名称的同名目录。</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">location</span> /img/ &#123;</span><br><span class="line">    <span class="attribute">alias</span> /var/www/image/;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># 访问/img/目录里面的文件时，ningx会自动去/var/www/image/目录找文件</span></span><br><span class="line"><span class="attribute">location</span> /img/ &#123;</span><br><span class="line">    <span class="attribute">root</span> /var/www/image;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># 访问/img/目录下的文件时，nginx会去/var/www/image/img/目录下找文件。]</span></span><br></pre></td></tr></table></figure><h3 id="防盗图配置"><a href="#防盗图配置" class="headerlink" title="防盗图配置"></a>防盗图配置</h3><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">location</span> <span class="regexp">~ \/public\/(css|js|img)\/.*\.(js|css|gif|jpg|jpeg|png|bmp|swf)</span> &#123;</span><br><span class="line">    <span class="attribute">valid_referers</span> <span class="literal">none</span> <span class="literal">blocked</span> <span class="regexp">*.jslite.io</span>;</span><br><span class="line">    <span class="attribute">if</span> (<span class="variable">$invalid_referer</span>) &#123;</span><br><span class="line">        <span class="attribute">rewrite</span><span class="regexp"> ^/</span>  http://wangchujiang.com/piratesp.png;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="屏蔽-git等文件"><a href="#屏蔽-git等文件" class="headerlink" title="屏蔽.git等文件"></a>屏蔽.git等文件</h3><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">location</span> <span class="regexp">~ (.git|.gitattributes|.gitignore|.svn)</span> &#123;</span><br><span class="line">    <span class="attribute">deny</span> all;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="域名路径加不加需要都能正常访问"><a href="#域名路径加不加需要都能正常访问" class="headerlink" title="域名路径加不加需要都能正常访问"></a>域名路径加不加需要都能正常访问</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">http://wangchujiang.com/api/index.php?a=1&amp;name=wcj</span><br><span class="line">                                  ^ 有后缀</span><br><span class="line"></span><br><span class="line">http://wangchujiang.com/api/index?a=1&amp;name=wcj</span><br><span class="line">                                 ^ 没有后缀</span><br></pre></td></tr></table></figure><p>nginx rewrite规则如下：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">rewrite</span><span class="regexp"> ^/(.*)/$</span> /index.php?/<span class="variable">$1</span> <span class="literal">permanent</span>;</span><br><span class="line"><span class="attribute">if</span> (!-d <span class="variable">$request_filename</span>)&#123;</span><br><span class="line">        <span class="attribute">set</span> <span class="variable">$rule_1</span> <span class="number">1</span><span class="variable">$rule_1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="attribute">if</span> (!-f <span class="variable">$request_filename</span>)&#123;</span><br><span class="line">        <span class="attribute">set</span> <span class="variable">$rule_1</span> <span class="number">2</span><span class="variable">$rule_1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="attribute">if</span> (<span class="variable">$rule_1</span> = <span class="string">"21"</span>)&#123;</span><br><span class="line">        <span class="attribute">rewrite</span><span class="regexp"> ^/</span> /index.php <span class="literal">last</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="错误问题"><a href="#错误问题" class="headerlink" title="错误问题"></a>错误问题</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">The plain HTTP request was sent to HTTPS port</span><br></pre></td></tr></table></figure><p>解决办法，<code>fastcgi_param HTTPS $https if_not_empty</code> 添加这条规则，</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span> <span class="number">443</span> ssl; <span class="comment"># 注意这条规则</span></span><br><span class="line">    <span class="attribute">server_name</span>  my.domain.com;</span><br><span class="line">    </span><br><span class="line">    <span class="attribute">fastcgi_param</span> HTTPS <span class="variable">$https</span> if_not_empty;</span><br><span class="line">    <span class="attribute">fastcgi_param</span> HTTPS <span class="literal">on</span>;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">ssl_certificate</span> /etc/ssl/certs/your.pem;</span><br><span class="line">    <span class="attribute">ssl_certificate_key</span> /etc/ssl/private/your.key;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">location</span> / &#123;</span><br><span class="line">        <span class="comment"># Your config here...</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="精品文章参考"><a href="#精品文章参考" class="headerlink" title="精品文章参考"></a>精品文章参考</h2><ul><li><a href="https://my.oschina.net/u/3341316/blog/877206" target="_blank" rel="noopener">负载均衡原理的解析</a></li><li><a href="http://blog.githuber.cn/posts/73" target="_blank" rel="noopener">Nginx泛域名解析，实现多个二级域名 </a></li><li><a href="https://www.nginx.com/blog/inside-nginx-how-we-designed-for-performance-scale/" target="_blank" rel="noopener">深入 NGINX: 我们如何设计性能和扩展</a></li><li><a href="https://www.nginx.com/blog/inside-nginx-how-we-designed-for-performance-scale/" target="_blank" rel="noopener">Inside NGINX: How We Designed for Performance &amp; Scale</a></li><li><a href="http://tengine.taobao.org/book/index.html" target="_blank" rel="noopener">Nginx开发从入门到精通</a></li><li><a href="http://os.51cto.com/art/201703/535326.htm#topx" target="_blank" rel="noopener">Nginx的优化与防盗链</a></li><li><a href="https://segmentfault.com/a/1190000009769143" target="_blank" rel="noopener">实战开发一个Nginx扩展 (Nginx Module)</a></li><li><a href="https://my.oschina.net/xshuai/blog/917097" target="_blank" rel="noopener">Nginx+Keepalived(双机热备)搭建高可用负载均衡环境(HA)</a></li><li><a href="http://www.huxd.org/articles/2017/07/24/1500890692329.html" target="_blank" rel="noopener">Nginx 平滑升级</a></li><li><a href="https://mp.weixin.qq.com/s?__biz=MzIxNzg5ODE0OA==&amp;mid=2247483708&amp;idx=1&amp;sn=90b0b1dccd9c337922a0588245277666&amp;chksm=97f38cf7a08405e1928e0b46d923d630e529e7db8ac7ca2a91310a075986f8bcb2cee5b4953d#rd" target="_blank" rel="noopener">Nginx最新模块—ngx_http_mirror_module分析可以做版本发布前的预先验证，进行流量放大后的压测等等</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;作者 : daodaoliang@yeah.net(最初来源于github用户:@jaywcjlove)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;日期 : 2018-03-22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;版本 : 0.0.1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p align=&quot;center&quot;&gt;&lt;br&gt;  &lt;a href=&quot;http://nginx.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;br&gt;    &lt;img width=&quot;210&quot; src=&quot;/res/img/blog/linux学习/nginx.svg&quot;&gt;&lt;br&gt;  &lt;/a&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="环境搭建" scheme="http://daodaoliang.com/categories/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="linux" scheme="http://daodaoliang.com/tags/linux/"/>
    
      <category term="环境搭建" scheme="http://daodaoliang.com/tags/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
      <category term="nginx" scheme="http://daodaoliang.com/tags/nginx/"/>
    
      <category term="运维" scheme="http://daodaoliang.com/tags/%E8%BF%90%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>SSH隧道学习</title>
    <link href="http://daodaoliang.com/linux%E5%AD%A6%E4%B9%A0/2018/03/12/linux%E5%AD%A6%E4%B9%A0-2017-02-06-SSH%E9%9A%A7%E9%81%93%E5%AD%A6%E4%B9%A0/"/>
    <id>http://daodaoliang.com/linux学习/2018/03/12/linux学习-2017-02-06-SSH隧道学习/</id>
    <published>2018-03-11T16:00:00.000Z</published>
    <updated>2018-03-22T06:50:18.370Z</updated>
    
    <content type="html"><![CDATA[<pre><code>作者: daodaoliang版本: V 0.0.1日期: 2018年03月12日</code></pre><a id="more"></a><p>這個功能太他媽的性感了</p>]]></content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;作者: daodaoliang
版本: V 0.0.1
日期: 2018年03月12日
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="linux学习" scheme="http://daodaoliang.com/categories/linux%E5%AD%A6%E4%B9%A0/"/>
    
    
  </entry>
  
  <entry>
    <title>linux驱动学习之HelloWorld</title>
    <link href="http://daodaoliang.com/linux%E9%A9%B1%E5%8A%A8%E5%AD%A6%E4%B9%A0/2017/08/08/linux%E9%A9%B1%E5%8A%A8%E5%AD%A6%E4%B9%A0-2017-08-08-linux%E9%A9%B1%E5%8A%A8%E5%AD%A6%E4%B9%A0%E5%BC%80%E7%AF%87/"/>
    <id>http://daodaoliang.com/linux驱动学习/2017/08/08/linux驱动学习-2017-08-08-linux驱动学习开篇/</id>
    <published>2017-08-07T16:00:00.000Z</published>
    <updated>2018-05-08T02:30:52.257Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">作者: daodaoliang@yeah.net</span><br><span class="line">日期: 2017年8月8日10:46:59</span><br><span class="line">版本: V 0.0.1</span><br></pre></td></tr></table></figure><a id="more"></a><hr><h3 id="0x00-背景描述"><a href="#0x00-背景描述" class="headerlink" title="0x00 背景描述"></a>0x00 背景描述</h3><ul><li>在linux系统下，系统内核分为三种类型，字符设备/块设备/网络设备</li><li>第一个驱动程序 hello world 将按照块设备进行</li></ul><h3 id="0x01-测试驱动代码"><a href="#0x01-测试驱动代码" class="headerlink" title="0x01 测试驱动代码"></a>0x01 测试驱动代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/init.h&gt;;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/module.h&gt;;</span></span></span><br><span class="line"><span class="comment">//内核2.6以上版本建议我们加上这个license</span></span><br><span class="line">MODULE_LICENSE(<span class="string">"Dual BSD/GPL"</span>);</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">hello_init</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    printk(KERN_ALERT <span class="string">"Hello, world\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">hello_exit</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">printk(KERN_ALERT <span class="string">"Goodbye, cruel world\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line">module_init(hello_init);</span><br><span class="line">module_exit(hello_exit);</span><br></pre></td></tr></table></figure><h3 id="0x02-MakeFile文件编写"><a href="#0x02-MakeFile文件编写" class="headerlink" title="0x02 MakeFile文件编写"></a>0x02 MakeFile文件编写</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">obj-m:=hello.o</span><br><span class="line">KERNELDIR:=/lib/modules/4.4.0-98-generic/build</span><br><span class="line">PWD:=$(shell pwd)</span><br><span class="line">modules:</span><br><span class="line">$(MAKE) -C $(KERNELDIR) M=$(PWD) modules</span><br><span class="line">modules_install:</span><br><span class="line">$(MAKE) -C $(KERNELDIR) M=$(PWD) modules_install</span><br></pre></td></tr></table></figure><h3 id="0x03-编译操作"><a href="#0x03-编译操作" class="headerlink" title="0x03 编译操作"></a>0x03 编译操作</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make</span><br></pre></td></tr></table></figure><h3 id="0x04-安装驱动"><a href="#0x04-安装驱动" class="headerlink" title="0x04 安装驱动"></a>0x04 安装驱动</h3><p>动态加载驱动模块:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">insmod hello.ko</span><br></pre></td></tr></table></figure><p>查看已安装的模块:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsmod</span><br></pre></td></tr></table></figure><p>查看打印输出:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dmesg | tail</span><br><span class="line">#可以看到  helloworld。</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;作者: daodaoliang@yeah.net&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;日期: 2017年8月8日10:46:59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;版本: V 0.0.1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="linux驱动学习" scheme="http://daodaoliang.com/categories/linux%E9%A9%B1%E5%8A%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
  </entry>
  
  <entry>
    <title>CentOS下面编译Qt4.8.6</title>
    <link href="http://daodaoliang.com/Qt%E5%AD%A6%E4%B9%A0/2017/08/02/Qt%E5%AD%A6%E4%B9%A0-2017-8-2-CentOS%E4%B8%8B%E9%9D%A2%E7%BC%96%E8%AF%91Qt4-8-6/"/>
    <id>http://daodaoliang.com/Qt学习/2017/08/02/Qt学习-2017-8-2-CentOS下面编译Qt4-8-6/</id>
    <published>2017-08-01T16:00:00.000Z</published>
    <updated>2018-05-08T02:30:52.257Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">作者: daodaoliang</span><br><span class="line">日期: 2017-08-02</span><br><span class="line">版本: 0.0.1</span><br><span class="line">邮箱: daodaoliang@yeah.net</span><br></pre></td></tr></table></figure><a id="more"></a><h4 id="1-安装前准备"><a href="#1-安装前准备" class="headerlink" title="1. 安装前准备"></a>1. 安装前准备</h4><ul><li>系统环境说明</li></ul><table><thead><tr><th style="text-align:center">环境</th><th style="text-align:center">版本</th></tr></thead><tbody><tr><td style="text-align:center">CentOS</td><td style="text-align:center">7.2.1511</td></tr></tbody></table><ul><li>安装开发工具包</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum groupinstall <span class="string">"Development Tools"</span></span><br></pre></td></tr></table></figure><ul><li>安装 (libX11-devel、libXext-devel、libXtst-devel)</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum install libX11-devel</span><br><span class="line">yum install libXext-devel</span><br><span class="line">yum install libXtst-devel</span><br></pre></td></tr></table></figure><p><strong>PS：</strong> 如果不安装以上的包在进行 <code>configure</code> 时会出现以下错误</p><blockquote><p>You might need to modify the include and library search paths by editing<br>QMAKE_INCDIR_X11 and QMAKE_LIBDIR_X11 in /home/zhu/Qt/qt-x11-opensource-src-4.8.6/mkspecs/Linux-g++</p></blockquote><h4 id="2-编译安装"><a href="#2-编译安装" class="headerlink" title="2. 编译安装"></a>2. 编译安装</h4><ul><li>下载源码包</li></ul><table><thead><tr><th style="text-align:center">下载名称</th><th style="text-align:center">下载链接</th></tr></thead><tbody><tr><td style="text-align:center">qt-4.8.6源码</td><td style="text-align:center"><a href="http://download.qt.io/archive/qt/4.8/4.8.6/" target="_blank" rel="noopener">点我下载</a></td></tr></tbody></table><ul><li>解压源码包</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 解压的目的目录视情况而定, 随便就好</span><br><span class="line">cp qt-everywhere-opensource-src-4.8.6.tar.gz /usr/local/src</span><br><span class="line">tar zxvf ./qt-everywhere-opensource-src-4.8.6.tar.gz</span><br></pre></td></tr></table></figure><ul><li>配置生成 <code>Makefile</code></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd qt-everywhere-opensource-src-4.8.6</span><br><span class="line">./configure</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">这是需要用户输入协议版本之类的，按需输入即可</span><br></pre></td></tr></table></figure><ul><li>编译 &amp;&amp; 安装</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gmake &amp;&amp; gmake install</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">编译完成的系统会安装在 /usr/local/Trolltech/Qt-4.8.6 下面</span><br></pre></td></tr></table></figure><h4 id="3-配置环境变量"><a href="#3-配置环境变量" class="headerlink" title="3. 配置环境变量"></a>3. 配置环境变量</h4><ul><li>配置环境变量(/etc/profile)</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 在 /etc/profile 增加如下内容</span><br><span class="line">export QTDIR=/usr/local/Trolltech/Qt-4.8.6</span><br><span class="line">export PATH=$QTDIR/bin:$PATH</span><br><span class="line">export MANPATH=$QTDIR/man:$MANPATH</span><br><span class="line">export LD_LIBRARY_PATH=$QTDIR/lib:$LD_LIBRARY_PATH</span><br></pre></td></tr></table></figure><ul><li>测试</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">qmake -v</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;作者: daodaoliang&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;日期: 2017-08-02&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;版本: 0.0.1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;邮箱: daodaoliang@yeah.net&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Qt学习" scheme="http://daodaoliang.com/categories/Qt%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Qt" scheme="http://daodaoliang.com/tags/Qt/"/>
    
  </entry>
  
  <entry>
    <title>mysql用户账号操作</title>
    <link href="http://daodaoliang.com/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AD%A6%E4%B9%A0/2017/07/10/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AD%A6%E4%B9%A0-mysql%E4%B8%93%E9%A2%98-2014-12-21-Mysql%E7%94%A8%E6%88%B7%E8%B4%A6%E5%8F%B7%E6%93%8D%E4%BD%9C/"/>
    <id>http://daodaoliang.com/数据库学习/2017/07/10/数据库学习-mysql专题-2014-12-21-Mysql用户账号操作/</id>
    <published>2017-07-09T16:00:00.000Z</published>
    <updated>2017-08-02T01:33:10.264Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">作者: daodaoliang</span><br><span class="line">日期: 2017-07-10</span><br><span class="line">版本: 0.0.3</span><br><span class="line">邮箱: daodaoliang@yeah.net</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="0x01-新建用户"><a href="#0x01-新建用户" class="headerlink" title="0x01 新建用户"></a>0x01 <strong>新建用户</strong></h3><ul><li>登陆mysql</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure><ul><li>创建用户(5.7系列以前)</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">insert into mysql.user(Host,User,Password) values(<span class="string">"localhost"</span>,<span class="string">"用户名"</span>,password(<span class="string">"密码"</span>));</span><br><span class="line">mysql&gt;flush privileges;</span><br></pre></td></tr></table></figure><ul><li>创建用户(通用)</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CREATE USER <span class="string">'username'</span>@<span class="string">'host'</span> IDENTIFIED BY <span class="string">'password'</span>;</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><p>这样就创建了用户,可以登陆试一下;</p><h3 id="0x02-为用户授权"><a href="#0x02-为用户授权" class="headerlink" title="0x02 为用户授权"></a>0x02 <strong>为用户授权</strong></h3><p>登陆mysql</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure><p>授权用户拥有数据库的所有权限。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">grant all privileges on *.* to 用户名@<span class="string">'地址'</span> identified by <span class="string">'密码'</span>;</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><p>指定部分权限的话,可以这样子写:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">grant select,update on *.* to 用户名@<span class="string">'地址'</span> identified by <span class="string">'密码'</span>;</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><p><strong>特别注意:</strong></p><blockquote><p>格式：grant 权限 on 数据库名.表名 to 用户@登录主机 identified by “用户密码”;</p></blockquote><blockquote><p>@ 后面是访问mysql的客户端IP地址（或是 主机名） % 代表任意的客户端，如果填写 localhost 为本地访问（那此用户就不能远程访问该mysql数据库了）。</p></blockquote><h3 id="0x03-删除用户"><a href="#0x03-删除用户" class="headerlink" title="0x03 删除用户"></a>0x03 <strong>删除用户</strong></h3><p>登陆mysql后</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt;DELETE FROM user WHERE User=<span class="string">"phplamp"</span> and Host=<span class="string">"localhost"</span>;</span><br><span class="line">mysql&gt;flush privileges;</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop user daodaoliang@&apos;%&apos;</span><br></pre></td></tr></table></figure><h3 id="0x04-修改指定用户密码"><a href="#0x04-修改指定用户密码" class="headerlink" title="0x04 修改指定用户密码"></a>0x04 <strong>修改指定用户密码</strong></h3><ul><li><strong><em>用UPDATE直接编辑user表(5.7之前版本)</em></strong></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">update mysql.user <span class="built_in">set</span> password=password(<span class="string">'新密码'</span>) <span class="built_in">where</span> User=<span class="string">"phplamp"</span>;</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><ul><li><strong><em>用UPDATE直接编辑user表(5.7之后版本)</em></strong></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">update user <span class="built_in">set</span> authentication_string=password(<span class="string">'新密码'</span>) <span class="built_in">where</span> user=<span class="string">'root'</span>;</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><ul><li><strong><em>用mysqladmin</em></strong></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysqladmin -u root password <span class="string">"newpass"</span></span><br><span class="line"><span class="comment"># 若设置过root密码,采用如下方法</span></span><br><span class="line">mysqladmin -u root password oldpass <span class="string">"newpass"</span></span><br></pre></td></tr></table></figure><ul><li><strong><em>用SET PASSWORD命令(通用)</em></strong></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SET PASSWORD FOR <span class="string">'root@localhost'</span> = PASSWORD(<span class="string">'newpass'</span>);</span><br></pre></td></tr></table></figure><h3 id="0x05-修改或者忘记ROOT密码"><a href="#0x05-修改或者忘记ROOT密码" class="headerlink" title="0x05 修改或者忘记ROOT密码"></a>0x05 修改或者忘记ROOT密码</h3><ul><li>停止数据库服务</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/mysql stop</span><br></pre></td></tr></table></figure><ul><li>跳过权限表安全启动</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld_safe --user=mysql --skip-grant-tables --skip-networking &amp;</span><br></pre></td></tr></table></figure><ul><li>重新登录mysql</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root mysql</span><br></pre></td></tr></table></figure><ul><li>修改root密码</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SET PASSWORD FOR <span class="string">'root@%'</span> = PASSWORD(<span class="string">'newpass'</span>);</span><br><span class="line">   FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure><ul><li>重新启动mysql服务</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/mysql restart</span><br></pre></td></tr></table></figure><h3 id="0x06-重命名用户账号"><a href="#0x06-重命名用户账号" class="headerlink" title="0x06 重命名用户账号"></a>0x06 重命名用户账号</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rename user daodaoliang@&apos;%&apos; to nami@&apos;%&apos;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;作者: daodaoliang&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;日期: 2017-07-10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;版本: 0.0.3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;邮箱: daodaoliang@yeah.net&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="数据库学习" scheme="http://daodaoliang.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="mysql" scheme="http://daodaoliang.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>CentOS下搭建IPv6环境</title>
    <link href="http://daodaoliang.com/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/2017/06/22/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA-2017-06-22-CentOS%E4%B8%8B%E6%90%AD%E5%BB%BAipv6%E7%8E%AF%E5%A2%83/"/>
    <id>http://daodaoliang.com/环境搭建/2017/06/22/环境搭建-2017-06-22-CentOS下搭建ipv6环境/</id>
    <published>2017-06-21T16:00:00.000Z</published>
    <updated>2018-03-22T06:50:18.532Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">作者 : daodaoliang@yeah.net</span><br><span class="line">日期 : 2017-06-22</span><br><span class="line">版本 : 0.0.1</span><br></pre></td></tr></table></figure><a id="more"></a><p>[TOC]</p><h3 id="1-背景简介"><a href="#1-背景简介" class="headerlink" title="1. 背景简介"></a>1. 背景简介</h3><ol><li>阿里云的<code>centos</code>默认是没有开启<code>IPv6</code>的，可以通过 <code>lsmod | grep ipv6</code> 或者 <code>ifconfig -a | grep inet6</code> 进行对应的查看;</li><li>由于某些应用在上线某个平台时需要进行Ipv6的适配;</li><li><code>Ipv6</code> 确实在某些场景下时必须的;</li></ol><p>基于以上种种原因，因此才有此文章，此文章所有的部分内容为查阅的其他工程师的探究结果。</p><h3 id="2-开启系统的Ipv6"><a href="#2-开启系统的Ipv6" class="headerlink" title="2. 开启系统的Ipv6"></a>2. 开启系统的<code>Ipv6</code></h3><h4 id="2-1-检查系统是否已经开启Ipv6"><a href="#2-1-检查系统是否已经开启Ipv6" class="headerlink" title="2.1 检查系统是否已经开启Ipv6"></a>2.1 检查系统是否已经开启<code>Ipv6</code></h4><p>在终端执行进行查看</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ifconfig -a | inet6</span><br></pre></td></tr></table></figure><h4 id="2-2-配置开启Ipv6"><a href="#2-2-配置开启Ipv6" class="headerlink" title="2.2 配置开启Ipv6"></a>2.2 配置开启<code>Ipv6</code></h4><ul><li>修改<code>/etc/sysctl.conf</code>, 存在则修改，不存在则增加如下内容:</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/res/img/blog/环境搭建/ipv6.png" alt="img" title="">                </div>                <div class="image-caption">img</div>            </figure><ul><li>修改 <code>/etc/modprobe.d/disable_ipv6.conf</code>, 存在则修改，不存在则增加如下内容：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">修改前</span><br><span class="line">alias net-pf-10 off</span><br><span class="line">alias ipv6 off</span><br><span class="line">options ipv6 disable=1</span><br><span class="line"></span><br><span class="line">修改后</span><br><span class="line">alias net-pf-10 off</span><br><span class="line">#alias ipv6 off</span><br><span class="line">options ipv6 disable=0</span><br></pre></td></tr></table></figure><ul><li>修改<code>/etc/sysconfig/network</code>, 存在则修改，不存在则增加如下内容:</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">修改前</span><br><span class="line">NETWORKING=yes</span><br><span class="line">HOSTNAME=coolnull</span><br><span class="line">NETWORKING_IPV6=no</span><br><span class="line">PEERNTP=no</span><br><span class="line">GATEWAY=*.*.*.*</span><br><span class="line"></span><br><span class="line">修改后</span><br><span class="line">NETWORKING=yes</span><br><span class="line">HOSTNAME=coolnull</span><br><span class="line">NETWORKING_IPV6=yes</span><br><span class="line">PEERNTP=no</span><br><span class="line">GATEWAY=*.*.*.*</span><br></pre></td></tr></table></figure><ul><li>至此ipv6的服务器端支持已经完成，重启服务器测试是否支持ipv6</li></ul><h3 id="3-注册免费的Ipv6隧道"><a href="#3-注册免费的Ipv6隧道" class="headerlink" title="3. 注册免费的Ipv6隧道"></a>3. 注册免费的<code>Ipv6</code>隧道</h3><h4 id="3-1-注册账号"><a href="#3-1-注册账号" class="headerlink" title="3.1 注册账号"></a>3.1 注册账号</h4><p><a href="https://www.tunnelbroker.net/" target="_blank" rel="noopener">https://www.tunnelbroker.net/</a>,不再赘述，注意邮箱不要使用腾讯家的就好，不然收不到激活邮件;</p><h4 id="3-2-创建通道"><a href="#3-2-创建通道" class="headerlink" title="3.2 创建通道"></a>3.2 创建通道</h4><ul><li>填写云服务器ip以及选择默认的隧道节点，点击Create Tunnel创建。填写ip都，如果出现“IP is a potential tunnel endpoint.”则证明可以添加ipv6隧道，一般隧道节点系统已经默认分配，可以手动选择，大家可以在自己的云服务器上分别ping一下这些ip，选时延低的。</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/res/img/blog/环境搭建/ipv61.jpg" alt="ipv61" title="">                </div>                <div class="image-caption">ipv61</div>            </figure><ul><li>到下一页面切换到Example configurations选项卡，如果你的VPS是centOS/Debian这些常见Linux的话，下拉菜单选择Linux-route2，出现了设置的命令，复制到自己的云服务器上运行。</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/res/img/blog/环境搭建/ipv62.jpg" alt="ipv62" title="">                </div>                <div class="image-caption">ipv62</div>            </figure><ul><li>如果执行失败请用下面的命令执行,替换掉里面对应的IP信息</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># modprobe ipv6</span><br><span class="line"># ip tunnel add he-ipv6 mode sit remote &lt;Server IPv4 Address&gt; local &lt;Client IPv4 Address&gt; ttl 255</span><br><span class="line"># ip link set he-ipv6 up</span><br><span class="line"># ip addr add &lt;Server IPv6 Address&gt; dev he-ipv6</span><br><span class="line"># ip -6 route add ::/0 dev he-ipv6</span><br><span class="line"># ip -f inet6 addr</span><br></pre></td></tr></table></figure><h4 id="3-3-测试Ipv6"><a href="#3-3-测试Ipv6" class="headerlink" title="3.3 测试Ipv6"></a>3.3 测试<code>Ipv6</code></h4><ul><li>终端执行如下指令查看对应结果</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ifconfig he-ipv6</span><br></pre></td></tr></table></figure><ul><li><code>ping6 google</code>的<code>ipv6</code>的<code>DNS</code>服务器</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ping6 -c 5 2001:4860:4860::8888</span><br></pre></td></tr></table></figure><p><strong><em>小技巧:</em></strong></p><ul><li>增加<code>Google</code>的<code>Ipv6</code>的<code>DNS</code>服务器</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># vim /eyc/resolv.conf</span><br><span class="line">nameserver 2001:4860:4860::8888</span><br><span class="line">nameserver 2001:4860:4860::8844</span><br></pre></td></tr></table></figure><p>接下来就能直接 <code>ping6</code> 支持ipv6的地址了;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ping6 ipv6.google.com</span><br></pre></td></tr></table></figure><h3 id="4-配置阿里云域名"><a href="#4-配置阿里云域名" class="headerlink" title="4. 配置阿里云域名"></a>4. 配置阿里云域名</h3><p>在增加<code>A</code>记录的同时，增加<code>AAAA</code>记录即可，<code>AAAA</code>记录里面的值为<code>server</code>里面的值 注意不要带后面<code>/64</code></p>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;作者 : daodaoliang@yeah.net&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;日期 : 2017-06-22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;版本 : 0.0.1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="环境搭建" scheme="http://daodaoliang.com/categories/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="centos" scheme="http://daodaoliang.com/tags/centos/"/>
    
      <category term="ipv6" scheme="http://daodaoliang.com/tags/ipv6/"/>
    
      <category term="环境搭建" scheme="http://daodaoliang.com/tags/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title>CentOS6升级GCC版本</title>
    <link href="http://daodaoliang.com/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/2017/04/20/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA-2017-04-20-CentOS6%E5%8D%87%E7%BA%A7GCC%E7%89%88%E6%9C%AC/"/>
    <id>http://daodaoliang.com/环境搭建/2017/04/20/环境搭建-2017-04-20-CentOS6升级GCC版本/</id>
    <published>2017-04-19T16:00:00.000Z</published>
    <updated>2017-05-11T10:33:32.543Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">作者 : daodaoliang@yeah.net</span><br><span class="line">日期 : 2017-04-20</span><br><span class="line">版本 : 0.0.1</span><br></pre></td></tr></table></figure><a id="more"></a><p>[TOC]</p><h3 id="1-背景简述"><a href="#1-背景简述" class="headerlink" title="1. 背景简述"></a>1. 背景简述</h3><p><code>CentOS 6</code>系列的服务器,默认的gcc编译器都是 <code>4.4.7</code> 版本,有事后为了开发或者编译其他开源软件，则需要对gcc编译器进行升级;</p><h3 id="2-安装GCC前准备"><a href="#2-安装GCC前准备" class="headerlink" title="2. 安装GCC前准备"></a>2. 安装<code>GCC</code>前准备</h3><h4 id="2-1-下载指定版本"><a href="#2-1-下载指定版本" class="headerlink" title="2.1 下载指定版本"></a>2.1 下载指定版本</h4><p>首先在官网上面下载你需要的<code>GCC</code>版本,<a href="http://ftp.gnu.org/gnu/gcc" target="_blank" rel="noopener">官网在这里</a>,笔者选择的是<code>GCC 4.8.4</code>版本;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/src</span><br><span class="line">   wget http://ftp.gnu.org/gnu/gcc/gcc-4.8.4/gcc-4.8.4.tar.gz</span><br></pre></td></tr></table></figure><h4 id="2-2-解压并进行准备工作"><a href="#2-2-解压并进行准备工作" class="headerlink" title="2.2 解压并进行准备工作"></a>2.2 解压并进行准备工作</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar zxvf gcc-4.8.4.tar.gz</span><br></pre></td></tr></table></figure><h4 id="2-3-下载供编译需求的依赖项"><a href="#2-3-下载供编译需求的依赖项" class="headerlink" title="2.3 下载供编译需求的依赖项"></a>2.3 下载供编译需求的依赖项</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/src/gcc-4.8.4/contrib/download_prerequisites</span><br></pre></td></tr></table></figure><h3 id="3-开始安装"><a href="#3-开始安装" class="headerlink" title="3. 开始安装"></a>3. 开始安装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/src/gcc-4.8.4</span><br><span class="line">   mkdir gcc-build</span><br><span class="line">   cd gcc-build</span><br><span class="line">   ../configure -enable-checking=release -enable-languages=c,c++ -disable-multilib</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make -j4</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo make install</span><br></pre></td></tr></table></figure><h3 id="4-配置环境"><a href="#4-配置环境" class="headerlink" title="4. 配置环境"></a>4. 配置环境</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cp /usr/local/lib64/libstdc++* /usr/lib64/</span><br><span class="line">   ln -s /usr/lib64/libstdc++.so /usr/lib64/libstdc++.so.6.0.19</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;作者 : daodaoliang@yeah.net&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;日期 : 2017-04-20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;版本 : 0.0.1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="环境搭建" scheme="http://daodaoliang.com/categories/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
    
  </entry>
  
  <entry>
    <title>CentOS下Nexus搭建Maven私库</title>
    <link href="http://daodaoliang.com/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/2017/04/20/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA-2017-04-20-CentOS%E4%B8%8BNexus%E6%90%AD%E5%BB%BAMaven%E7%A7%81%E5%BA%93/"/>
    <id>http://daodaoliang.com/环境搭建/2017/04/20/环境搭建-2017-04-20-CentOS下Nexus搭建Maven私库/</id>
    <published>2017-04-19T16:00:00.000Z</published>
    <updated>2017-05-11T10:33:32.543Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">作者 : daodaoliang@yeah.net</span><br><span class="line">日期 : 2017-04-20</span><br><span class="line">版本 : 0.0.4</span><br></pre></td></tr></table></figure><a id="more"></a><p>[TOC]</p><h3 id="1-Maven私服简介"><a href="#1-Maven私服简介" class="headerlink" title="1. Maven私服简介"></a>1. <code>Maven</code>私服简介</h3><p>搭建私服可以做什么？<br>1、如果公司开发组的开发环境全部内网，这时如何连接到在互联网上的Maven中央仓库呢？<br>2、如果公司经常开发一些公共的组件，如何共享给各个开发组，使用拷贝方式吗？如果这样，公共库升级了怎么办？<br>当然可以解决的问题可能不止上面两点，下面来介绍在<code>CentOS</code>中搭建自己的<code>Maven</code>私服，使用<code>Nexus</code>。</p><h3 id="2-java-运行环境准备"><a href="#2-java-运行环境准备" class="headerlink" title="2. java 运行环境准备"></a>2. <code>java</code> 运行环境准备</h3><p>根据官网的介绍，运行环境最好是使用最新的8版本，官网文如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Nexus Repository Manager requires a Java 8 Runtime Environment (JRE) from Oracle. The distributions for OSX and Windows include suitable runtime environments for the specific operating system. The distributions for Unix do not include the runtime environment.</span><br><span class="line">If you prefer to use an external runtime or use a Unix operating system, it is recommended to use the latest version of Java 8 available from the Oracle website. You can choose to install the full JDK or the JRE only.</span><br></pre></td></tr></table></figure><h4 id="2-1-本地java版本确认"><a href="#2-1-本地java版本确认" class="headerlink" title="2.1 本地java版本确认"></a>2.1 本地<code>java</code>版本确认</h4><p>如果系统是新安装的并且没有进行相关配置的话，默认应该是<code>openJDK1.7版本</code>;</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/res/img/blog/环境搭建/java-version.png" alt="java版本查看" title="">                </div>                <div class="image-caption">java版本查看</div>            </figure><h4 id="2-2-安装新的JDK"><a href="#2-2-安装新的JDK" class="headerlink" title="2.2 安装新的JDK"></a>2.2 安装新的<code>JDK</code></h4><ul><li>由于原有系统很多包都是依赖与JDK，以防万一，我就没有卸载原有的JDK而是在安装一个8版本的JDK;</li><li>在<a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html" target="_blank" rel="noopener">JDK官网</a>找到对应的<code>rpm</code>包进行下载并安装,建议本机迅雷下载完成后再传到服务器,也可以找一些速度快的镜像站进行下载;</li><li>下载完后直接安装，然后查看对应的版本信息是否正确;</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/res/img/blog/环境搭建/java-upgrade.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><ul><li>顺手改一下<code>JAVA_HOME</code>的环境变量;</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/res/img/blog/环境搭建/java-home.png" alt="java-home" title="">                </div>                <div class="image-caption">java-home</div>            </figure><h3 id="3-安装-Nexus"><a href="#3-安装-Nexus" class="headerlink" title="3. 安装 Nexus"></a>3. 安装 <code>Nexus</code></h3><h4 id="3-1-下载Nexus"><a href="#3-1-下载Nexus" class="headerlink" title="3.1 下载Nexus"></a>3.1 下载<code>Nexus</code></h4><ul><li>从<a href="https://www.sonatype.com/download-oss-sonatype" target="_blank" rel="noopener">官网下载</a>对应的安装包到服务器</li></ul><p><strong>PS</strong>：建议在本机用迅雷下载完了在传上去，或者用一些快一点镜像站；</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://www.sonatype.com/oss-thank-you-tar.gz</span><br></pre></td></tr></table></figure><h4 id="3-2-安装-Nexus"><a href="#3-2-安装-Nexus" class="headerlink" title="3.2 安装 Nexus"></a>3.2 安装 <code>Nexus</code></h4><ul><li>解压安装包</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar zxvf oss-thank-you-tar.gz</span><br></pre></td></tr></table></figure><ul><li>安装成服务</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv ./nexus-3.1.1-X86_64/  /usr/local/nexus3</span><br></pre></td></tr></table></figure><p>增加环境变量<code>NEXUS_HOME</code></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/res/img/blog/环境搭建/nexus.png" alt="nexus环境变量" title="">                </div>                <div class="image-caption">nexus环境变量</div>            </figure><p>创建并开启服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo ln -s $NEXUS_HOME/bin/nexus /etc/init.d/nexus</span><br><span class="line">   cd /etc/init.d</span><br><span class="line">   sudo chkconfig --add nexus</span><br><span class="line">   sudo chkconfig --levels 345 nexus on</span><br><span class="line">   sudo service nexus start</span><br></pre></td></tr></table></figure><h3 id="4-配置-Nexus"><a href="#4-配置-Nexus" class="headerlink" title="4. 配置 Nexus"></a>4. 配置 <code>Nexus</code></h3><h4 id="4-1-配置WEB-访问"><a href="#4-1-配置WEB-访问" class="headerlink" title="4.1 配置WEB 访问"></a>4.1 配置<code>WEB</code> 访问</h4><ul><li>开启 <code>8081</code> 端口</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/sysconfig/iptables</span><br></pre></td></tr></table></figure><p>增加如下一条:</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/res/img/blog/环境搭建/iptables.png" alt="iptables" title="">                </div>                <div class="image-caption">iptables</div>            </figure><ul><li>浏览器访问</li></ul><p>在浏览器中打开对应的URL 例如: <a href="http://10.140.22.205:8081" target="_blank" rel="noopener">http://10.140.22.205:8081</a>,默认管理员用户名和密码如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">user: admin</span><br><span class="line">   pwd: admin123</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/res/img/blog/环境搭建/maven.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>默认<code>nexus</code>已经帮我们创建了五个库和两个组,我们可以直接使用,其中<code>Type</code>为<code>prosy</code>的为代理库,<code>Type</code>为<code>hosted</code>的为宿主库,<code>Type</code>为<code>group</code>的为组;</p><p>  一般用到的仓库种类是<code>hosted</code>、<code>proxy</code>。<code>Hosted</code>代表宿主仓库，用来发布一些第三方不允许的组件，比如<code>Oracle</code>驱动、比如商业软件<code>jar</code>包。<code>Proxy</code>代表代理远程的仓库，最典型的就是<code>Maven</code>官方中央仓库、<code>JBoss</code>仓库等等。如果构建的<code>Maven</code>项目本地仓库没有依赖包，那么就会去这个代理站点去下载，那么如果代理站点也没有此依赖包，就回去远程中央仓库下载依赖，这些中央仓库就是<code>proxy</code>。代理站点下载成功后再下载至本机。</p><h4 id="4-2-本地项目配置"><a href="#4-2-本地项目配置" class="headerlink" title="4.2 本地项目配置"></a>4.2 本地项目配置</h4><p>在项目的<code>pom.xml</code>或者<code>settings.xml</code>文件里加入一下配置信息（区别，<code>pom.xml</code>是针对当前项目，<code>settings.xml</code>是全局的针对所有项目）配置信息中的<code>id</code>,<code>name</code>和<code>url</code>跟上图中的仓库对应，<code>type</code>为<code>proxy</code>，说明它只是代理，只能用于下载<code>jar</code>包，不能用于发布项目。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">repositories</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>maven-central<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>maven-central<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://10.140.22.205:8081/repository/maven-central/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">layout</span>&gt;</span>default<span class="tag">&lt;/<span class="name">layout</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">snapshotPolicy</span>&gt;</span>always<span class="tag">&lt;/<span class="name">snapshotPolicy</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">repositories</span>&gt;</span></span><br></pre></td></tr></table></figure><p>其他使用可以<a href="https://segmentfault.com/a/1190000005966312" target="_blank" rel="noopener">参考这里</a></p>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;作者 : daodaoliang@yeah.net&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;日期 : 2017-04-20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;版本 : 0.0.4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="环境搭建" scheme="http://daodaoliang.com/categories/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
    
  </entry>
  
  <entry>
    <title>CentOS6.8下安装Maven</title>
    <link href="http://daodaoliang.com/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/2017/04/14/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA-2017-04-14-CentOS6-8%E4%B8%8B%E5%AE%89%E8%A3%85Maven/"/>
    <id>http://daodaoliang.com/环境搭建/2017/04/14/环境搭建-2017-04-14-CentOS6-8下安装Maven/</id>
    <published>2017-04-13T16:00:00.000Z</published>
    <updated>2017-05-11T10:33:32.543Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">作者 : daodaoliang@yeah.net</span><br><span class="line">日期 : 2017-04-13</span><br><span class="line">版本 : 0.0.4</span><br></pre></td></tr></table></figure><a id="more"></a><p>[TOC]</p><h3 id="0-安装Maven前准备"><a href="#0-安装Maven前准备" class="headerlink" title="0. 安装Maven前准备"></a>0. 安装<code>Maven</code>前准备</h3><ul><li>确保系统已经安装了<code>Java</code>的运行环境;</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 查看java版本，确保已经安装了java</span><br><span class="line">java -version</span><br></pre></td></tr></table></figure><p>终端输出如下内容说明已经安装了java，并且为 openJDK 系列的 <code>1.7.0_131</code> 版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@yafan2-xb src]# java -version</span><br><span class="line">java version &quot;1.7.0_131&quot;</span><br><span class="line">OpenJDK Runtime Environment (rhel-2.6.9.0.el6_8-x86_64 u131-b00)</span><br><span class="line">OpenJDK 64-Bit Server VM (build 24.131-b00, mixed mode)</span><br></pre></td></tr></table></figure><ul><li>确保系统已经配置了<code>JAVA_HOME</code>系统环境变量;</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">env | grep JAVA_HOME</span><br><span class="line">   或者</span><br><span class="line">   echo $JAVA_HOME</span><br></pre></td></tr></table></figure><p>若是终端没有输出对应的值，则说明系统是没有配置<code>JAVA_HOME</code>环境变量的;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 查找 java 路径, 笔者电脑输出 /usr/bin/java</span><br><span class="line">which java</span><br><span class="line">   </span><br><span class="line">   # 查找 java 的真实路径 笔者电脑输出 /usr/bin/java -&gt; /etc/alternatives/java</span><br><span class="line">   ls -alh /usr/bin/java</span><br><span class="line">   </span><br><span class="line">   # 继续查找 java 的真实路径 笔者电脑输出 /etc/alternatives/java -&gt; /usr/lib/jvm/jre-1.7.0-openjdk.x86_64/bin/java</span><br><span class="line">   ls -alh /etc/alternatives/java</span><br></pre></td></tr></table></figure><p>经过上一步找到了 <code>java</code> 的在当前系统中的真实可执行目录，按照如下方式配置环境变量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/profile</span><br></pre></td></tr></table></figure><p>添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export JAVA_HOME=/usr/lib/jvm/jre-1.7.0-openjdk.x86_64</span><br><span class="line">export CLASSPATH=.:$JAVA_HOME/jre/lib/rt.jar:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar</span><br><span class="line">export PATH=$PATH:$JAVA_HOME/bin</span><br></pre></td></tr></table></figure><p>使新的环境变量生效</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure><h3 id="1-安装maven环境"><a href="#1-安装maven环境" class="headerlink" title="1.安装maven环境"></a>1.安装<code>maven</code>环境</h3><ul><li>下载<code>maven</code>二进制包</li></ul><p><code>maven</code>的官方下载地址<a href="Maven的下载地址是：http://maven.apache.org/download.cgi">在这里</a> 。 <strong>PS:</strong> 建议在下载时选择一个比较快的源,笔者选择的是清华大学的源,下载速度在 400K左右;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/src</span><br><span class="line">   wget http://mirrors.tuna.tsinghua.edu.cn/apache/maven/maven-3/3.5.0/binaries/apache-maven-3.5.0-bin.tar.gz</span><br></pre></td></tr></table></figure><ul><li>解压并配置</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar zxf apache-maven-3.5.0-bin.tar.gz</span><br><span class="line">mv apache-maven-3.5.0 /usr/local/maven3</span><br></pre></td></tr></table></figure><ul><li>配置环境变量(/etc/profile)</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#在适当的位置添加</span><br><span class="line">export M2_HOME=/usr/local/maven3</span><br><span class="line">export PATH=$PATH:$JAVA_HOME/bin:$M2_HOME/bin</span><br></pre></td></tr></table></figure><p>使环境变量生效</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure><ul><li>验证版本</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn -v</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;作者 : daodaoliang@yeah.net&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;日期 : 2017-04-13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;版本 : 0.0.4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="环境搭建" scheme="http://daodaoliang.com/categories/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
    
  </entry>
  
  <entry>
    <title>CentOS下搭建GitLab服务器</title>
    <link href="http://daodaoliang.com/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/2017/04/13/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA-2014-10-17-Ubuntu14-04%E4%B8%8B%E9%85%8D%E7%BD%AEGitLab7/"/>
    <id>http://daodaoliang.com/环境搭建/2017/04/13/环境搭建-2014-10-17-Ubuntu14-04下配置GitLab7/</id>
    <published>2017-04-12T16:00:00.000Z</published>
    <updated>2017-05-11T10:33:32.512Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">作者 : daodaoliang@yeah.net</span><br><span class="line">日期 : 2017-04-13</span><br><span class="line">版本 : 0.0.4</span><br></pre></td></tr></table></figure><a id="more"></a><hr><ul><li>TOC<br>{:toc}</li></ul><hr><h3 id="0-Gitlab-简介"><a href="#0-Gitlab-简介" class="headerlink" title="0 Gitlab 简介"></a>0 <code>Gitlab</code> 简介</h3><p>GitLab 是一个用于仓库管理系统的开源项目。使用Git作为代码管理工具，并在此基础上搭建起来的web服务。可通过Web界面进行访问公开的或者私人项目。它拥有与Github类似的功能，能够浏览源代码，管理缺陷和注释。可以管理团队对仓库的访问，它非常易于浏览提交过的版本并提供一个文件历史库。团队成员可以利用内置的简单聊天程序(Wall)进行交流。它还提供一个代码片段收集功能可以轻松实现代码复用。</p><hr><h3 id="1-Gitlab-的安装"><a href="#1-Gitlab-的安装" class="headerlink" title="1. Gitlab 的安装"></a>1. <code>Gitlab</code> 的安装</h3><p><code>Gitlab</code> 有两种安装方式:</p><table><thead><tr><th style="text-align:center">安装方式</th><th style="text-align:center">简介</th></tr></thead><tbody><tr><td style="text-align:center">源码方式安装</td><td style="text-align:center">这个有些费劲,时间充足喜欢折腾按照<a href="https://docs.gitlab.com.cn/ce/install/README.html" target="_blank" rel="noopener">链接文档</a>安装即可</td></tr><tr><td style="text-align:center"><code>Omnibus</code>方式安装</td><td style="text-align:center">这个简单,不出任何意外大约一个半小时左右安装完毕</td></tr></tbody></table><h3 id="1-1-采用-Omnibus-方式"><a href="#1-1-采用-Omnibus-方式" class="headerlink" title="1.1 采用 Omnibus 方式"></a>1.1 采用 <code>Omnibus</code> 方式</h3><p>根据<a href="https://www.gitlab.com.cn/downloads" target="_blank" rel="noopener">官网地址</a>，选择 <code>CentOS 6</code> 然后执行相应命令，即可完成安装操作，如果你用虚拟机，就直接用迅雷搞定，然后再拖进去吧，毕竟<code>200+M</code>,<a href="https://mirrors.tuna.tsinghua.edu.cn/gitlab-ce/" target="_blank" rel="noopener">下载连接在这里</a></p><p>如果你不想观看官网那么跟着下面步骤走：</p><h4 id="1-1-1-安装配置依赖项"><a href="#1-1-1-安装配置依赖项" class="headerlink" title="1.1.1 安装配置依赖项"></a>1.1.1 安装配置依赖项</h4><p>如想使用Postfix来发送邮件,在安装期间请选择’Internet Site’. 您也可以用sendmai或者 配置SMTP服务 并 使用SMTP发送邮件.在 Centos 6 和 7 系统上, 下面的命令将在系统防火墙里面开放HTTP和SSH端口.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install curl openssh-server openssh-clients postfix cronie</span><br><span class="line">sudo service postfix start</span><br><span class="line">sudo chkconfig postfix on</span><br><span class="line">sudo lokkit -s http -s ssh</span><br></pre></td></tr></table></figure><h4 id="1-1-2-添加GitLab仓库-并安装到服务器上"><a href="#1-1-2-添加GitLab仓库-并安装到服务器上" class="headerlink" title="1.1.2 添加GitLab仓库,并安装到服务器上"></a>1.1.2 添加GitLab仓库,并安装到服务器上</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -sS http://packages.gitlab.cc/install/gitlab-ce/script.rpm.sh | sudo bash</span><br><span class="line">sudo yum install gitlab-ce</span><br></pre></td></tr></table></figure><h4 id="1-1-3-启动-Gitlab"><a href="#1-1-3-启动-Gitlab" class="headerlink" title="1.1.3 启动 Gitlab"></a>1.1.3 启动 <code>Gitlab</code></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gitlab-ctl reconfigure</span><br></pre></td></tr></table></figure><hr><h3 id="2-邮箱配置"><a href="#2-邮箱配置" class="headerlink" title="2.邮箱配置"></a>2.邮箱配置</h3><p>当你按照提示安装好后，基本上就可以使用了，但是在使用的过程中，我们发现邮件通知功能不稳定，使用</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /var/<span class="built_in">log</span>/mail.log</span><br></pre></td></tr></table></figure><p>查看后发现，邮件被当成了垃圾邮件，被退信了。<br>使用默认<code>Gitlab</code>的邮件服务的话，貌似被退信的几率比较高，因此我们需修改一下，毕竟邮件通知还是很重要的。我们注册一个邮箱账号，让<code>GitLab</code>通过该账号向我们发送邮件通知，这看起来就像两个人正常通信了，基本上就不会被退信了。</p><h4 id="2-1-注册邮箱"><a href="#2-1-注册邮箱" class="headerlink" title="2.1 注册邮箱"></a>2.1 注册邮箱</h4><p>注册QQ企业云邮箱不解释，记住用户名密码即可，你也可以随便使用其他邮箱服务器，不过不建议网易家的，他们会出现一些安全方面的拦截。</p><h4 id="2-2-配置邮箱"><a href="#2-2-配置邮箱" class="headerlink" title="2.2 配置邮箱"></a>2.2 配置邮箱</h4><p>修改发送邮件步骤如下：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /etc/gitlab/gitlab.rb</span><br></pre></td></tr></table></figure><p>增加如下配置项，例:</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">gitlab_rails['smtp_enable'] = true</span><br><span class="line">gitlab_rails['smtp_address'] = "smtp.exmail.qq.com"</span><br><span class="line">gitlab_rails['smtp_port'] = 465</span><br><span class="line">gitlab_rails['smtp_user_name'] = "youraccount"</span><br><span class="line">gitlab_rails['smtp_password'] = "yourPWD"</span><br><span class="line">gitlab_rails['smtp_authentication'] = "login"</span><br><span class="line">gitlab_rails['smtp_enable_starttls_auto'] = true</span><br><span class="line">gitlab_rails['smtp_tls'] = true</span><br><span class="line">gitlab_rails['gitlab_email_from'] = 'youraccount'</span><br></pre></td></tr></table></figure><p>修改完成后，需要执行以下命令使生效:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gitlab-ctl reconfigure.</span><br></pre></td></tr></table></figure><h4 id="2-3-测试邮箱"><a href="#2-3-测试邮箱" class="headerlink" title="2.3 测试邮箱"></a>2.3 测试邮箱</h4><ol><li>执行 gitlab-rails console</li><li>在上面步骤后执行：</li></ol><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Notify.test_email(<span class="string">'destination_email@address.com'</span>, <span class="string">'Message Subject'</span>, <span class="string">'Message Body'</span>).deliver_now</span><br></pre></td></tr></table></figure><p><strong>PS:</strong> 具体其他的请参考<a href="http://docs.gitlab.com/omnibus/settings/smtp.html" target="_blank" rel="noopener">这篇文档</a></p><h3 id="4-Gitlab-运维"><a href="#4-Gitlab-运维" class="headerlink" title="4. Gitlab 运维"></a>4. <code>Gitlab</code> 运维</h3><p>具体运维请参考<a href="https://docs.gitlab.com.cn/ce/README.html" target="_blank" rel="noopener">这篇文档</a></p><h4 id="4-1-管理"><a href="#4-1-管理" class="headerlink" title="4.1 管理"></a>4.1 管理</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 启动所有 gitlab 组件：</span><br><span class="line">sudo gitlab-ctl start</span><br><span class="line"></span><br><span class="line"># 停止所有 gitlab 组件：</span><br><span class="line">sudo gitlab-ctl stop</span><br><span class="line"></span><br><span class="line"># 重启所有 gitlab 组件：</span><br><span class="line">sudo gitlab-ctl restart</span><br></pre></td></tr></table></figure><h4 id="4-2-备份"><a href="#4-2-备份" class="headerlink" title="4.2 备份"></a>4.2 备份</h4><p>备份GitLab repositories and GitLab metadata</p><p>在 crontab 中加入如下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0 2 * * * /usr/bin/gitlab-rake gitlab:backup:create</span><br></pre></td></tr></table></figure><h4 id="4-3-恢复"><a href="#4-3-恢复" class="headerlink" title="4.3 恢复"></a>4.3 恢复</h4><p>首先进入备份 gitlab 的目录，这个目录是配置文件中的<code>gitlab_rails[&#39;backup_path&#39;]</code> ，默认为 <code>/var/opt/gitlab/backups</code> 。</p><p>然后停止 <code>unicorn 和 sidekiq</code> ，保证数据库没有新的连接，不会有写数据情况。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo gitlab-ctl stop unicorn</span><br><span class="line"># ok: down: unicorn: 0s, normally up</span><br><span class="line">sudo gitlab-ctl stop sidekiq</span><br><span class="line"># ok: down: sidekiq: 0s, normally up</span><br></pre></td></tr></table></figure><p>然后恢复数据，1406691018为备份文件的时间戳</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gitlab-rake gitlab:backup:restore BACKUP=1406691018</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;作者 : daodaoliang@yeah.net&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;日期 : 2017-04-13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;版本 : 0.0.4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="环境搭建" scheme="http://daodaoliang.com/categories/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
    
  </entry>
  
  <entry>
    <title>windows下服务程序相关</title>
    <link href="http://daodaoliang.com/windows%E5%AD%A6%E4%B9%A0/2017/04/12/windows%E5%AD%A6%E4%B9%A0-2017-04-12-windows%E4%B8%8B%E9%9D%A2%E6%9C%8D%E5%8A%A1%E7%A8%8B%E5%BA%8F%E7%9B%B8%E5%85%B3/"/>
    <id>http://daodaoliang.com/windows学习/2017/04/12/windows学习-2017-04-12-windows下面服务程序相关/</id>
    <published>2017-04-11T16:00:00.000Z</published>
    <updated>2017-08-08T03:08:53.730Z</updated>
    
    <content type="html"><![CDATA[<hr><pre><code>作者: daodaoliang版本: V 0.0.1日期: 2017年11月25日</code></pre><a id="more"></a><hr><h3 id="1-Windows-Service-编程实现"><a href="#1-Windows-Service-编程实现" class="headerlink" title="1. Windows Service 编程实现"></a>1. <code>Windows Service</code> 编程实现</h3><p>在windows平台下面编写 服务程序 免不了要去查看微软的开发者文档，相关的介绍在<a href="https://msdn.microsoft.com/en-us/library/windows/desktop/ms686953(v=vs.85).aspx" target="_blank" rel="noopener">这里</a>, 多了也就不在罗嗦了,如果你嫌弃直接用他们的<code>API</code>的话,可以使用别人已经封装好的，比如:</p><table><thead><tr><th style="text-align:center">参考代码</th><th style="text-align:center">连接</th></tr></thead><tbody><tr><td style="text-align:center"><a href="https://github.com/magicsih/WindowsService" target="_blank" rel="noopener">参考代码001</a></td><td style="text-align:center"><a href="https://github.com/magicsih/WindowsService" target="_blank" rel="noopener">https://github.com/magicsih/WindowsService</a></td></tr><tr><td style="text-align:center"><a href="https://github.com/Olster/windows_service" target="_blank" rel="noopener">参考代码002</a></td><td style="text-align:center"><a href="https://github.com/Olster/windows_service" target="_blank" rel="noopener">https://github.com/Olster/windows_service</a></td></tr><tr><td style="text-align:center"><a href="https://github.com/Kingston1/windows-service" target="_blank" rel="noopener">参考代码003</a></td><td style="text-align:center"><a href="https://github.com/Kingston1/windows-service" target="_blank" rel="noopener">https://github.com/Kingston1/windows-service</a></td></tr><tr><td style="text-align:center"><a href="https://github.com/horigome/sylph" target="_blank" rel="noopener">参考代码004</a></td><td style="text-align:center"><a href="https://github.com/horigome/sylph" target="_blank" rel="noopener">https://github.com/horigome/sylph</a></td></tr></tbody></table><h3 id="2-采用第三方封装的SCP"><a href="#2-采用第三方封装的SCP" class="headerlink" title="2. 采用第三方封装的SCP"></a>2. 采用第三方封装的SCP</h3><h3 id="2-1-nssm-Non-Sucking-Service-Manager"><a href="#2-1-nssm-Non-Sucking-Service-Manager" class="headerlink" title="2.1 nssm (Non-Sucking Service Manager)"></a>2.1 <code>nssm</code> (Non-Sucking Service Manager)</h3><ul><li><p>编译或者下载<code>nssm</code></p><p>  <a href="http://nssm.cc/download" target="_blank" rel="noopener">下载连接在这里</a>,一定要注意系统位数的区别，32位和64位;</p></li><li><p>使用方式</p></li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/res/img/blog/windows/nssm.png" alt="methods" title="">                </div>                <div class="image-caption">methods</div>            </figure>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;pre&gt;&lt;code&gt;作者: daodaoliang
版本: V 0.0.1
日期: 2017年11月25日
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="windows学习" scheme="http://daodaoliang.com/categories/windows%E5%AD%A6%E4%B9%A0/"/>
    
    
  </entry>
  
  <entry>
    <title>windows脚本UAC获取</title>
    <link href="http://daodaoliang.com/windows%E5%AD%A6%E4%B9%A0/2017/04/12/windows%E5%AD%A6%E4%B9%A0-2017-04-12-windowsUAC/"/>
    <id>http://daodaoliang.com/windows学习/2017/04/12/windows学习-2017-04-12-windowsUAC/</id>
    <published>2017-04-11T16:00:00.000Z</published>
    <updated>2017-05-11T10:33:32.356Z</updated>
    
    <content type="html"><![CDATA[<hr><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">auther  =  <span class="string">'daodaoliang'</span></span><br><span class="line">version =  <span class="string">'V 0.0.1'</span></span><br><span class="line">date    =  <span class="string">'2017年04月12日'</span></span><br></pre></td></tr></table></figure><a id="more"></a><hr><p>常用的windows下面的脚本，首先判断用户的管理员权限，而后进行<code>sc</code>的服务操作;</p><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">echo <span class="keyword">off</span></span><br><span class="line">cls</span><br><span class="line">:-------------------------------------</span><br><span class="line"><span class="keyword">REM</span>  --&gt; Check <span class="keyword">for</span> permissions</span><br><span class="line">&gt;nul <span class="number">2</span>&gt;&amp;<span class="number">1</span> <span class="string">"%SYSTEMROOT%\system32\cacls.exe"</span> <span class="string">"%SYSTEMROOT%\system32\config\system"</span></span><br><span class="line"><span class="keyword">REM</span> --&gt; <span class="keyword">If</span> <span class="keyword">error</span> flag <span class="keyword">set</span>, we <span class="keyword">do</span> <span class="keyword">not</span> have admin.</span><br><span class="line"><span class="keyword">if</span> <span class="comment">'%errorlevel%' NEQ '0' (</span></span><br><span class="line">    echo Requesting administrative privileges...</span><br><span class="line">    <span class="keyword">goto</span> UACPrompt</span><br><span class="line">) <span class="keyword">else</span> ( <span class="keyword">goto</span> gotAdmin )</span><br><span class="line"></span><br><span class="line">:UACPrompt</span><br><span class="line">    echo <span class="keyword">Set</span> UAC = CreateObject^(<span class="string">"Shell.Application"</span>^) &gt; <span class="string">"%temp%\getadmin.vbs"</span></span><br><span class="line">    <span class="keyword">set</span> params = %*:<span class="string">"="</span><span class="string">"</span></span><br><span class="line"><span class="string">    echo UAC.ShellExecute "</span>cmd.exe<span class="string">", "</span>/c %~s0 %params%<span class="string">", "</span><span class="string">", "</span>runas<span class="string">", 1 &gt;&gt; "</span>%temp%\getadmin.vbs<span class="string">"</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    "</span>%temp%\getadmin.vbs<span class="string">"</span></span><br><span class="line"><span class="string">    del "</span>%temp%\getadmin.vbs<span class="string">"</span></span><br><span class="line"><span class="string">    exit /B</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">:gotAdmin</span></span><br><span class="line"><span class="string">    pushd "</span>%CD%<span class="string">"</span></span><br><span class="line"><span class="string">    CD /D "</span>%~dp0<span class="string">"</span></span><br><span class="line"><span class="string">:--------------------------------------</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">echo --- Logger Service Installer ---</span></span><br><span class="line"><span class="string">set /p servicename=Service name :</span></span><br><span class="line"><span class="string">echo Options:</span></span><br><span class="line"><span class="string">echo 1. Install</span></span><br><span class="line"><span class="string">echo 2. Start</span></span><br><span class="line"><span class="string">echo 3. Stop </span></span><br><span class="line"><span class="string">echo 4. Remove</span></span><br><span class="line"><span class="string">echo 5. Exit</span></span><br><span class="line"><span class="string">:CASE_init</span></span><br><span class="line"><span class="string">SET /P option="</span><span class="keyword">Option</span>: <span class="string">"</span></span><br><span class="line"><span class="string">2&gt;NUL CALL :CASE_%option% # jump to :CASE_1, :CASE_2, CASE_3, CASE_4, CASE_5</span></span><br><span class="line"><span class="string">IF ERRORLEVEL 1 CALL :DEFAULT_CASE # if label doesn't exist</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">ECHO Done.</span></span><br><span class="line"><span class="string">EXIT /B</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">:CASE_1</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">sc create %servicename% binPath= "</span>yourpath/app.exe<span class="string">"</span></span><br><span class="line"><span class="string">GOTO CASE_init</span></span><br><span class="line"><span class="string">:CASE_2</span></span><br><span class="line"><span class="string">sc start %servicename%</span></span><br><span class="line"><span class="string">GOTO CASE_init</span></span><br><span class="line"><span class="string">:CASE_3</span></span><br><span class="line"><span class="string">sc stop %servicename%</span></span><br><span class="line"><span class="string">GOTO CASE_init</span></span><br><span class="line"><span class="string">:CASE_4</span></span><br><span class="line"><span class="string">sc delete %servicename%</span></span><br><span class="line"><span class="string">GOTO CASE_init</span></span><br><span class="line"><span class="string">:CASE_5</span></span><br><span class="line"><span class="string">GOTO END_CASE</span></span><br><span class="line"><span class="string">:DEFAULT_CASE</span></span><br><span class="line"><span class="string">ECHO Unknown option %option%</span></span><br><span class="line"><span class="string">GOTO CASE_init</span></span><br><span class="line"><span class="string">:END_CASE</span></span><br><span class="line"><span class="string">pause</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;auther  =  &lt;span class=&quot;string&quot;&gt;&#39;daodaoliang&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;version =  &lt;span class=&quot;string&quot;&gt;&#39;V 0.0.1&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;date    =  &lt;span class=&quot;string&quot;&gt;&#39;2017年04月12日&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="windows学习" scheme="http://daodaoliang.com/categories/windows%E5%AD%A6%E4%B9%A0/"/>
    
    
  </entry>
  
  <entry>
    <title>最为常用的HASH算法</title>
    <link href="http://daodaoliang.com/c-%E5%AD%A6%E4%B9%A0/2017/03/08/c-%E5%AD%A6%E4%B9%A0-2017-03-08-HashAlgorithm/"/>
    <id>http://daodaoliang.com/c-学习/2017/03/08/c-学习-2017-03-08-HashAlgorithm/</id>
    <published>2017-03-07T16:00:00.000Z</published>
    <updated>2017-05-11T10:33:32.340Z</updated>
    
    <content type="html"><![CDATA[<pre><code>作者: daodaoliang版本: V 0.0.1日期: 2017年03月08日</code></pre><p> murmurhash2算法 和 DJB Hash算法是目前最流行的hash算法</p><a id="more"></a><h3 id="1-DJB-HASH算法"><a href="#1-DJB-HASH算法" class="headerlink" title="1.DJB HASH算法"></a>1.DJB HASH算法</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* the famous DJB Hash Function for strings */</span></span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="keyword">int</span> <span class="title">DJBHash</span><span class="params">(<span class="keyword">char</span> *str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> hash = <span class="number">5381</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (*str)&#123;</span><br><span class="line">       hash = ((hash &lt;&lt; <span class="number">5</span>) + hash) + (*str++); <span class="comment">/* times 33 */</span></span><br><span class="line">    &#125;</span><br><span class="line">    hash &amp;= ~(<span class="number">1</span> &lt;&lt; <span class="number">31</span>); <span class="comment">/* strip the highest bit */</span></span><br><span class="line">    <span class="keyword">return</span> hash;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h3 id="2-murmurhash2"><a href="#2-murmurhash2" class="headerlink" title="2.murmurhash2"></a>2.murmurhash2</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">uint32_t</span></span><br><span class="line">murmur_hash2(<span class="keyword">char</span> *data, <span class="keyword">size_t</span> len)</span><br><span class="line">&#123;  </span><br><span class="line">    <span class="keyword">uint32_t</span>  h, k;</span><br><span class="line">  </span><br><span class="line">    h = <span class="number">0</span> ^ len;</span><br><span class="line">  </span><br><span class="line">    <span class="keyword">while</span> (len &gt;= <span class="number">4</span>) &#123;</span><br><span class="line">        k  = data[<span class="number">0</span>];</span><br><span class="line">        k |= data[<span class="number">1</span>] &lt;&lt; <span class="number">8</span>;</span><br><span class="line">        k |= data[<span class="number">2</span>] &lt;&lt; <span class="number">16</span>;</span><br><span class="line">        k |= data[<span class="number">3</span>] &lt;&lt; <span class="number">24</span>;</span><br><span class="line">  </span><br><span class="line">        k *= <span class="number">0x5bd1e995</span>;</span><br><span class="line">        k ^= k &gt;&gt; <span class="number">24</span>;</span><br><span class="line">        k *= <span class="number">0x5bd1e995</span>;</span><br><span class="line"></span><br><span class="line">        h *= <span class="number">0x5bd1e995</span>;</span><br><span class="line">        h ^= k;</span><br><span class="line"></span><br><span class="line">        data += <span class="number">4</span>;</span><br><span class="line">        len -= <span class="number">4</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span> (len) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">        h ^= data[<span class="number">2</span>] &lt;&lt; <span class="number">16</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">        h ^= data[<span class="number">1</span>] &lt;&lt; <span class="number">8</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">        h ^= data[<span class="number">0</span>];</span><br><span class="line">        h *= <span class="number">0x5bd1e995</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    h ^= h &gt;&gt; <span class="number">13</span>;</span><br><span class="line">    h *= <span class="number">0x5bd1e995</span>;</span><br><span class="line">    h ^= h &gt;&gt; <span class="number">15</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> h;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;作者: daodaoliang
版本: V 0.0.1
日期: 2017年03月08日
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt; murmurhash2算法 和 DJB Hash算法是目前最流行的hash算法&lt;/p&gt;
    
    </summary>
    
      <category term="c++学习" scheme="http://daodaoliang.com/categories/c-%E5%AD%A6%E4%B9%A0/"/>
    
    
  </entry>
  
</feed>
